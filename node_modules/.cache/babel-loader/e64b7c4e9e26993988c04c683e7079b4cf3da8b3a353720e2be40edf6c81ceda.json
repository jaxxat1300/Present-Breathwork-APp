{"ast":null,"code":"import _objectSpread from\"/Users/iamcoolsuz/Desktop/Present Breathwork APp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// Navigation state\nconst[currentView,setCurrentView]=useState('home');// home, categories, exercise, profile, settings, feedback\nconst[selectedCategory,setSelectedCategory]=useState(null);const[currentExercise,setCurrentExercise]=useState(null);const[isActive,setIsActive]=useState(false);const[timeLeft,setTimeLeft]=useState(0);const[breathPhase,setBreathPhase]=useState('inhale');const[showFeedback,setShowFeedback]=useState(false);// Enhanced metrics\nconst[metrics,setMetrics]=useState({totalSessions:0,totalMinutes:0,streak:0,lastSession:null,favoriteExercises:[],weeklyGoal:5,weeklyProgress:0,categoryUsage:{stress:0,depression:0,everyday:0,energy:0,sleep:0},feedbackHistory:[]});// User profile and preferences\nconst[profile,setProfile]=useState({name:'',soundEnabled:true,hapticEnabled:true,quickStartEnabled:true});// Audio system\nconst[audioEnabled,setAudioEnabled]=useState(true);const audioRef=useRef(null);const intervalRef=useRef(null);const phaseIntervalRef=useRef(null);// Exercise categories and configurations\nconst categories={stress:{name:'Stress & Anxiety',icon:'🧘',description:'Quick relief when you need to calm down',color:'#8B5FBF',exercises:['boxBreathing','deepBelly','calmingBreath','anxietyRelief']},depression:{name:'Mood & Depression',icon:'🌈',description:'Uplift your mood and energy',color:'#9F7AEA',exercises:['energizingBreath','moodBoost','gratitudeBreath']},everyday:{name:'Everyday Wellness',icon:'✨',description:'Daily practices for balanced well-being',color:'#7C3AED',exercises:['morningBreath','afternoonReset','mindfulPause','quickRefresh']},sleep:{name:'Sleep & Rest',icon:'🌙',description:'Wind down and prepare for restful sleep',color:'#6B46C1',exercises:['sleepPrep','eveningCalm','deepRelaxation']},energy:{name:'Energy Boost',icon:'⚡',description:'Quick energy when you need alertness',color:'#5B21B6',exercises:['powerBreath','focusBoost','quickEnergizer']}};const exercises={// STRESS & ANXIETY\nboxBreathing:{name:'Box Breathing',duration:120,quickDuration:60,category:'stress',phases:[{name:'Inhale',duration:4,instruction:'Breathe in slowly'},{name:'Hold',duration:4,instruction:'Hold gently'},{name:'Exhale',duration:4,instruction:'Release slowly'},{name:'Hold',duration:4,instruction:'Pause empty'}],description:'Navy SEAL technique for instant calm',benefits:'Reduces stress, anxiety, and panic'},deepBelly:{name:'Deep Belly Breath',duration:120,quickDuration:60,category:'stress',phases:[{name:'Inhale',duration:5,instruction:'Breathe into your belly'},{name:'Exhale',duration:7,instruction:'Release completely'}],description:'Activate your calm nervous system',benefits:'Lowers heart rate, reduces stress hormones'},calmingBreath:{name:'Calming 4-7-8',duration:90,quickDuration:45,category:'stress',phases:[{name:'Inhale',duration:4,instruction:'Breathe in through nose'},{name:'Hold',duration:7,instruction:'Hold the breath'},{name:'Exhale',duration:8,instruction:'Exhale through mouth'}],description:'Dr. Weil\\'s natural tranquilizer',benefits:'Calms anxiety, stops panic attacks'},anxietyRelief:{name:'Anxiety Relief',duration:180,quickDuration:90,category:'stress',phases:[{name:'Inhale',duration:3,instruction:'Slow inhale'},{name:'Exhale',duration:6,instruction:'Long, slow exhale'}],description:'Extended exhales for deep calm',benefits:'Stops racing thoughts, releases tension'},// MOOD & DEPRESSION\nenergizingBreath:{name:'Energizing Breath',duration:90,quickDuration:45,category:'depression',phases:[{name:'Inhale',duration:2,instruction:'Quick, energizing inhale'},{name:'Exhale',duration:2,instruction:'Powerful exhale'}],description:'Wake up your body and mind',benefits:'Increases energy, lifts mood'},moodBoost:{name:'Mood Boost',duration:120,quickDuration:60,category:'depression',phases:[{name:'Inhale',duration:4,instruction:'Breathe in positivity'},{name:'Hold',duration:2,instruction:'Feel the energy'},{name:'Exhale',duration:4,instruction:'Release negativity'}],description:'Shift your emotional state',benefits:'Improves mood, reduces sadness'},gratitudeBreath:{name:'Gratitude Breath',duration:180,quickDuration:90,category:'depression',phases:[{name:'Inhale',duration:5,instruction:'Think of something good'},{name:'Hold',duration:3,instruction:'Feel grateful'},{name:'Exhale',duration:5,instruction:'Smile and release'}],description:'Combine breathing with gratitude',benefits:'Lifts depression, creates positive mindset'},// EVERYDAY WELLNESS\nmorningBreath:{name:'Morning Energizer',duration:120,quickDuration:60,category:'everyday',phases:[{name:'Inhale',duration:4,instruction:'Wake up your body'},{name:'Hold',duration:2,instruction:'Feel alive'},{name:'Exhale',duration:4,instruction:'Start fresh'}],description:'Perfect way to start your day',benefits:'Increases alertness, sets positive tone'},afternoonReset:{name:'Afternoon Reset',duration:90,quickDuration:45,category:'everyday',phases:[{name:'Inhale',duration:4,instruction:'Refresh your mind'},{name:'Exhale',duration:4,instruction:'Release the day'}],description:'Mid-day mental refresh',benefits:'Restores focus, renews energy'},mindfulPause:{name:'Mindful Pause',duration:120,quickDuration:60,category:'everyday',phases:[{name:'Notice',duration:5,instruction:'Simply observe your breath'}],description:'Return to the present moment',benefits:'Grounds you, improves awareness'},quickRefresh:{name:'Quick Refresh',duration:60,quickDuration:30,category:'everyday',phases:[{name:'Inhale',duration:3,instruction:'Quick energizing breath'},{name:'Exhale',duration:3,instruction:'Let it go'}],description:'Fast reset for busy moments',benefits:'Instant clarity and calm'},// SLEEP & REST\nsleepPrep:{name:'Sleep Preparation',duration:240,quickDuration:120,category:'sleep',phases:[{name:'Inhale',duration:4,instruction:'Slow, deep inhale'},{name:'Exhale',duration:8,instruction:'Long, relaxing exhale'}],description:'Prepare body and mind for sleep',benefits:'Improves sleep quality, reduces insomnia'},eveningCalm:{name:'Evening Calm',duration:180,quickDuration:90,category:'sleep',phases:[{name:'Inhale',duration:5,instruction:'Breathe in peace'},{name:'Exhale',duration:7,instruction:'Release the day'}],description:'Wind down after a busy day',benefits:'Calms mind, prepares for rest'},deepRelaxation:{name:'Deep Relaxation',duration:300,quickDuration:150,category:'sleep',phases:[{name:'Inhale',duration:6,instruction:'Deep, slow breath'},{name:'Exhale',duration:10,instruction:'Complete release'}],description:'Full body and mind relaxation',benefits:'Deep calm, profound rest'},// ENERGY BOOST\npowerBreath:{name:'Power Breath',duration:60,quickDuration:30,category:'energy',phases:[{name:'Inhale',duration:1,instruction:'Sharp inhale'},{name:'Exhale',duration:1,instruction:'Forceful exhale'}],description:'Instant energy surge',benefits:'Wakes you up, increases alertness'},focusBoost:{name:'Focus Boost',duration:90,quickDuration:45,category:'energy',phases:[{name:'Inhale',duration:3,instruction:'Energize your mind'},{name:'Hold',duration:2,instruction:'Build focus'},{name:'Exhale',duration:3,instruction:'Sharp exhale'}],description:'Sharpen your concentration',benefits:'Improves focus, boosts mental clarity'},quickEnergizer:{name:'Quick Energizer',duration:45,quickDuration:30,category:'energy',phases:[{name:'Inhale',duration:2,instruction:'Fast inhale'},{name:'Exhale',duration:2,instruction:'Quick release'}],description:'30-second energy boost',benefits:'Fast energy, instant alertness'}};// Feedback questions\nconst feedbackQuestions=[{id:'feeling',question:'How do you feel right now?',options:['Much better','Better','Same','Worse']},{id:'stress',question:'Your stress level?',options:['Low','Moderate','High','Very High']},{id:'helpful',question:'Was this session helpful?',options:['Very helpful','Helpful','Somewhat','Not really']}];// Load data from localStorage\nuseEffect(()=>{const savedMetrics=localStorage.getItem('breathworkMetrics');const savedProfile=localStorage.getItem('breathworkProfile');if(savedMetrics){setMetrics(JSON.parse(savedMetrics));}if(savedProfile){setProfile(JSON.parse(savedProfile));}},[]);// Save data to localStorage\nuseEffect(()=>{localStorage.setItem('breathworkMetrics',JSON.stringify(metrics));},[metrics]);useEffect(()=>{localStorage.setItem('breathworkProfile',JSON.stringify(profile));},[profile]);// Audio system\nuseEffect(()=>{if(audioEnabled&&profile.soundEnabled){if(!audioRef.current){audioRef.current=new(window.AudioContext||window.webkitAudioContext)();}}},[audioEnabled,profile.soundEnabled]);const playBreathingSound=phase=>{if(!audioEnabled||!profile.soundEnabled)return;try{const oscillator=audioRef.current.createOscillator();const gainNode=audioRef.current.createGain();oscillator.connect(gainNode);gainNode.connect(audioRef.current.destination);const frequencies={inhale:220,hold:330,exhale:110,notice:440};oscillator.frequency.setValueAtTime(frequencies[phase]||220,audioRef.current.currentTime);oscillator.type='sine';gainNode.gain.setValueAtTime(0,audioRef.current.currentTime);gainNode.gain.linearRampToValueAtTime(0.1,audioRef.current.currentTime+0.1);gainNode.gain.linearRampToValueAtTime(0,audioRef.current.currentTime+0.5);oscillator.start(audioRef.current.currentTime);oscillator.stop(audioRef.current.currentTime+0.5);}catch(error){console.log('Audio not available:',error);}};const triggerHapticFeedback=()=>{if(profile.hapticEnabled&&'vibrate'in navigator){navigator.vibrate([50,30,50]);}};// Start exercise\nconst startExercise=function(exerciseKey){let isQuick=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const exercise=exercises[exerciseKey];const duration=isQuick?exercise.quickDuration:exercise.duration;setCurrentExercise(_objectSpread(_objectSpread({key:exerciseKey},exercise),{},{actualDuration:duration}));setTimeLeft(duration);setIsActive(true);setBreathPhase('inhale');setCurrentView('exercise');// Update metrics\nsetMetrics(prev=>_objectSpread(_objectSpread({},prev),{},{totalSessions:prev.totalSessions+1,totalMinutes:prev.totalMinutes+Math.ceil(duration/60),lastSession:new Date().toISOString(),categoryUsage:_objectSpread(_objectSpread({},prev.categoryUsage),{},{[exercise.category]:(prev.categoryUsage[exercise.category]||0)+1})}));triggerHapticFeedback();playBreathingSound('inhale');};// Stop exercise\nconst stopExercise=()=>{setIsActive(false);if(intervalRef.current)clearInterval(intervalRef.current);if(phaseIntervalRef.current)clearInterval(phaseIntervalRef.current);// Show feedback\nsetShowFeedback(true);};const completeFeedback=answers=>{setMetrics(prev=>_objectSpread(_objectSpread({},prev),{},{feedbackHistory:[...prev.feedbackHistory,{exerciseKey:currentExercise.key,date:new Date().toISOString(),answers:answers}]}));setCurrentExercise(null);setTimeLeft(0);setBreathPhase('inhale');setShowFeedback(false);setCurrentView('home');};const skipFeedback=()=>{setCurrentExercise(null);setTimeLeft(0);setBreathPhase('inhale');setShowFeedback(false);setCurrentView('home');};// Timer countdown\nuseEffect(()=>{if(isActive&&timeLeft>0){intervalRef.current=setInterval(()=>{setTimeLeft(prev=>{if(prev<=1){setIsActive(false);setShowFeedback(true);return 0;}return prev-1;});},1000);}else{if(intervalRef.current)clearInterval(intervalRef.current);}return()=>{if(intervalRef.current)clearInterval(intervalRef.current);};},[isActive,timeLeft]);// Breathing phase management\nuseEffect(()=>{if(isActive&&currentExercise){let phaseIndex=0;let phaseStartTime=Date.now();phaseIntervalRef.current=setInterval(()=>{const currentPhase=currentExercise.phases[phaseIndex];const elapsed=Date.now()-phaseStartTime;const currentPhaseDuration=currentPhase.duration*1000;if(elapsed>=currentPhaseDuration){phaseIndex=(phaseIndex+1)%currentExercise.phases.length;phaseStartTime=Date.now();const newPhase=currentExercise.phases[phaseIndex].name.toLowerCase().replace(' ','');setBreathPhase(newPhase);playBreathingSound(newPhase);triggerHapticFeedback();}},100);return()=>{if(phaseIntervalRef.current)clearInterval(phaseIntervalRef.current);};}},[isActive,currentExercise]);const toggleFavorite=exerciseKey=>{setMetrics(prev=>_objectSpread(_objectSpread({},prev),{},{favoriteExercises:prev.favoriteExercises.includes(exerciseKey)?prev.favoriteExercises.filter(key=>key!==exerciseKey):[...prev.favoriteExercises,exerciseKey]}));};const updateProfile=updates=>{setProfile(prev=>_objectSpread(_objectSpread({},prev),updates));};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(mins,\":\").concat(secs.toString().padStart(2,'0'));};// Home view\nconst HomeView=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"home-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"How can we help you today?\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Choose what you need right now\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quick-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:metrics.totalSessions}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Sessions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:metrics.totalMinutes}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Minutes\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:metrics.streak}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Day Streak\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"categories-grid\",children:Object.entries(categories).map(_ref=>{let[key,category]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"category-card\",style:{borderLeft:\"4px solid \".concat(category.color)},onClick:()=>{setSelectedCategory(key);setCurrentView('categories');},children:[/*#__PURE__*/_jsx(\"div\",{className:\"category-icon\",children:category.icon}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:category.name}),/*#__PURE__*/_jsx(\"p\",{children:category.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[category.exercises.length,\" exercises\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"usage-count\",children:[metrics.categoryUsage[key]||0,\" sessions\"]})]})]})]},key);})}),metrics.favoriteExercises.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"favorites-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u2B50 Your Favorites\"}),/*#__PURE__*/_jsx(\"div\",{className:\"favorites-quick\",children:metrics.favoriteExercises.slice(0,3).map(exerciseKey=>/*#__PURE__*/_jsxs(\"button\",{className:\"quick-favorite-btn\",onClick:()=>startExercise(exerciseKey,true),children:[exercises[exerciseKey].name,/*#__PURE__*/_jsx(\"span\",{className:\"quick-label\",children:\"Quick\"})]},exerciseKey))})]})]});// Category view\nconst CategoryView=()=>{const category=categories[selectedCategory];const categoryExercises=category.exercises.map(key=>_objectSpread({key},exercises[key]));return/*#__PURE__*/_jsxs(\"div\",{className:\"category-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"category-header\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-btn-simple\",onClick:()=>setCurrentView('home'),children:\"\\u2190 Back\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"category-icon-large\",children:category.icon}),/*#__PURE__*/_jsx(\"h2\",{children:category.name}),/*#__PURE__*/_jsx(\"p\",{children:category.description})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"exercises-list\",children:categoryExercises.map(exercise=>/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-title-row\",children:[/*#__PURE__*/_jsx(\"h3\",{children:exercise.name}),/*#__PURE__*/_jsx(\"button\",{className:\"favorite-icon-btn\",onClick:e=>{e.stopPropagation();toggleFavorite(exercise.key);},children:metrics.favoriteExercises.includes(exercise.key)?'❤️':'🤍'})]}),/*#__PURE__*/_jsx(\"p\",{className:\"exercise-desc\",children:exercise.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"exercise-benefit\",children:[\"\\u2728 \",exercise.benefits]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"quick-start-btn\",onClick:()=>startExercise(exercise.key,true),children:[\"Quick\",/*#__PURE__*/_jsxs(\"span\",{className:\"time-label\",children:[Math.ceil(exercise.quickDuration/60),\"m\"]})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"full-start-btn\",onClick:()=>startExercise(exercise.key,false),children:[\"Full\",/*#__PURE__*/_jsxs(\"span\",{className:\"time-label\",children:[Math.ceil(exercise.duration/60),\"m\"]})]})]})]},exercise.key))})]});};// Exercise view\nconst ExerciseView=()=>{const currentPhase=(currentExercise===null||currentExercise===void 0?void 0:currentExercise.phases.find(p=>p.name.toLowerCase().replace(' ','')===breathPhase))||(currentExercise===null||currentExercise===void 0?void 0:currentExercise.phases[0]);return/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-active\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-top-bar\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-btn-simple\",onClick:stopExercise,children:\"\\u2190 Exit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"timer-display\",children:formatTime(timeLeft)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"exercise-title\",children:/*#__PURE__*/_jsx(\"h2\",{children:currentExercise.name})}),/*#__PURE__*/_jsx(\"div\",{className:\"breathing-circle-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"breathing-circle \".concat(breathPhase),children:/*#__PURE__*/_jsx(\"div\",{className:\"circle-inner\",children:/*#__PURE__*/_jsx(\"span\",{className:\"phase-name\",children:currentPhase===null||currentPhase===void 0?void 0:currentPhase.name})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"instruction-text\",children:/*#__PURE__*/_jsx(\"p\",{children:currentPhase===null||currentPhase===void 0?void 0:currentPhase.instruction})}),/*#__PURE__*/_jsx(\"div\",{className:\"exercise-progress\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat((currentExercise.actualDuration-timeLeft)/currentExercise.actualDuration*100,\"%\")}})})})]});};// Feedback view\nconst FeedbackView=()=>{const[answers,setAnswers]=useState({});const handleAnswer=(questionId,answer)=>{setAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[questionId]:answer}));};const isComplete=Object.keys(answers).length===feedbackQuestions.length;return/*#__PURE__*/_jsxs(\"div\",{className:\"feedback-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feedback-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Quick Feedback\"}),/*#__PURE__*/_jsx(\"p\",{children:\"How did it go? (Optional)\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"feedback-questions\",children:feedbackQuestions.map(q=>/*#__PURE__*/_jsxs(\"div\",{className:\"feedback-question\",children:[/*#__PURE__*/_jsx(\"h3\",{children:q.question}),/*#__PURE__*/_jsx(\"div\",{className:\"feedback-options\",children:q.options.map(option=>/*#__PURE__*/_jsx(\"button\",{className:\"feedback-option \".concat(answers[q.id]===option?'selected':''),onClick:()=>handleAnswer(q.id,option),children:option},option))})]},q.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"feedback-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"skip-feedback-btn\",onClick:skipFeedback,children:\"Skip\"}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-feedback-btn\",onClick:()=>completeFeedback(answers),disabled:!isComplete,children:\"Done\"})]})]});};// Profile view\nconst ProfileView=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"profile-view\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Profile\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:profile.name,onChange:e=>updateProfile({name:e.target.value}),placeholder:\"Enter your name\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-section\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:profile.soundEnabled,onChange:e=>updateProfile({soundEnabled:e.target.checked})}),\"Enable Sound\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-section\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:profile.hapticEnabled,onChange:e=>updateProfile({hapticEnabled:e.target.checked})}),\"Enable Haptic Feedback\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Progress\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:metrics.totalSessions}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-name\",children:\"Total Sessions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:metrics.totalMinutes}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-name\",children:\"Minutes\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:metrics.streak}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-name\",children:\"Day Streak\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-usage-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Category Usage\"}),Object.entries(categories).map(_ref2=>{let[key,category]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"usage-bar\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[category.icon,\" \",category.name]}),/*#__PURE__*/_jsx(\"span\",{className:\"usage-number\",children:metrics.categoryUsage[key]||0})]},key);})]})]});// Settings view\nconst SettingsView=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"settings-view\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Settings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Audio\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:audioEnabled,onChange:e=>setAudioEnabled(e.target.checked)}),\"Enable Audio Cues\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Weekly Goal\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:metrics.weeklyGoal,onChange:e=>setMetrics(prev=>_objectSpread(_objectSpread({},prev),{},{weeklyGoal:parseInt(e.target.value)})),min:\"1\",max:\"20\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Sessions per week: \",metrics.weeklyGoal]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"settings-section\",children:/*#__PURE__*/_jsx(\"button\",{className:\"reset-btn\",onClick:()=>{if(window.confirm('Reset all data?')){setMetrics({totalSessions:0,totalMinutes:0,streak:0,lastSession:null,favoriteExercises:[],weeklyGoal:5,weeklyProgress:0,categoryUsage:{stress:0,depression:0,everyday:0,energy:0,sleep:0},feedbackHistory:[]});}},children:\"Reset All Data\"})})]});// Navigation component\nconst Navigation=()=>/*#__PURE__*/_jsxs(\"nav\",{className:\"navigation\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"nav-btn \".concat(currentView==='home'?'active':''),onClick:()=>setCurrentView('home'),children:[\"\\uD83C\\uDFE0\",/*#__PURE__*/_jsx(\"span\",{children:\"Home\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"nav-btn \".concat(currentView==='profile'?'active':''),onClick:()=>setCurrentView('profile'),children:[\"\\uD83D\\uDC64\",/*#__PURE__*/_jsx(\"span\",{children:\"Profile\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"nav-btn \".concat(currentView==='settings'?'active':''),onClick:()=>setCurrentView('settings'),children:[\"\\u2699\\uFE0F\",/*#__PURE__*/_jsx(\"span\",{children:\"Settings\"})]})]});return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Present Breathwork\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"Your personal wellness companion\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"app-main\",children:[currentView==='home'&&/*#__PURE__*/_jsx(HomeView,{}),currentView==='categories'&&/*#__PURE__*/_jsx(CategoryView,{}),currentView==='exercise'&&!showFeedback&&/*#__PURE__*/_jsx(ExerciseView,{}),showFeedback&&/*#__PURE__*/_jsx(FeedbackView,{}),currentView==='profile'&&/*#__PURE__*/_jsx(ProfileView,{}),currentView==='settings'&&/*#__PURE__*/_jsx(SettingsView,{})]}),currentView!=='exercise'&&!showFeedback&&/*#__PURE__*/_jsx(Navigation,{})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","App","currentView","setCurrentView","selectedCategory","setSelectedCategory","currentExercise","setCurrentExercise","isActive","setIsActive","timeLeft","setTimeLeft","breathPhase","setBreathPhase","showFeedback","setShowFeedback","metrics","setMetrics","totalSessions","totalMinutes","streak","lastSession","favoriteExercises","weeklyGoal","weeklyProgress","categoryUsage","stress","depression","everyday","energy","sleep","feedbackHistory","profile","setProfile","name","soundEnabled","hapticEnabled","quickStartEnabled","audioEnabled","setAudioEnabled","audioRef","intervalRef","phaseIntervalRef","categories","icon","description","color","exercises","boxBreathing","duration","quickDuration","category","phases","instruction","benefits","deepBelly","calmingBreath","anxietyRelief","energizingBreath","moodBoost","gratitudeBreath","morningBreath","afternoonReset","mindfulPause","quickRefresh","sleepPrep","eveningCalm","deepRelaxation","powerBreath","focusBoost","quickEnergizer","feedbackQuestions","id","question","options","savedMetrics","localStorage","getItem","savedProfile","JSON","parse","setItem","stringify","current","window","AudioContext","webkitAudioContext","playBreathingSound","phase","oscillator","createOscillator","gainNode","createGain","connect","destination","frequencies","inhale","hold","exhale","notice","frequency","setValueAtTime","currentTime","type","gain","linearRampToValueAtTime","start","stop","error","console","log","triggerHapticFeedback","navigator","vibrate","startExercise","exerciseKey","isQuick","arguments","length","undefined","exercise","_objectSpread","key","actualDuration","prev","Math","ceil","Date","toISOString","stopExercise","clearInterval","completeFeedback","answers","date","skipFeedback","setInterval","phaseIndex","phaseStartTime","now","currentPhase","elapsed","currentPhaseDuration","newPhase","toLowerCase","replace","toggleFavorite","includes","filter","updateProfile","updates","formatTime","seconds","mins","floor","secs","concat","toString","padStart","HomeView","className","children","Object","entries","map","_ref","style","borderLeft","onClick","slice","CategoryView","categoryExercises","e","stopPropagation","ExerciseView","find","p","width","FeedbackView","setAnswers","handleAnswer","questionId","answer","isComplete","keys","q","option","disabled","ProfileView","value","onChange","target","placeholder","checked","_ref2","SettingsView","parseInt","min","max","confirm","Navigation"],"sources":["/Users/iamcoolsuz/Desktop/Present Breathwork APp/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst App = () => {\n  // Navigation state\n  const [currentView, setCurrentView] = useState('home'); // home, categories, exercise, profile, settings, feedback\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentExercise, setCurrentExercise] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [breathPhase, setBreathPhase] = useState('inhale');\n  const [showFeedback, setShowFeedback] = useState(false);\n  \n  // Enhanced metrics\n  const [metrics, setMetrics] = useState({\n    totalSessions: 0,\n    totalMinutes: 0,\n    streak: 0,\n    lastSession: null,\n    favoriteExercises: [],\n    weeklyGoal: 5,\n    weeklyProgress: 0,\n    categoryUsage: {\n      stress: 0,\n      depression: 0,\n      everyday: 0,\n      energy: 0,\n      sleep: 0\n    },\n    feedbackHistory: []\n  });\n\n  // User profile and preferences\n  const [profile, setProfile] = useState({\n    name: '',\n    soundEnabled: true,\n    hapticEnabled: true,\n    quickStartEnabled: true\n  });\n\n  // Audio system\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const audioRef = useRef(null);\n  const intervalRef = useRef(null);\n  const phaseIntervalRef = useRef(null);\n\n  // Exercise categories and configurations\n  const categories = {\n    stress: {\n      name: 'Stress & Anxiety',\n      icon: '🧘',\n      description: 'Quick relief when you need to calm down',\n      color: '#8B5FBF',\n      exercises: ['boxBreathing', 'deepBelly', 'calmingBreath', 'anxietyRelief']\n    },\n    depression: {\n      name: 'Mood & Depression',\n      icon: '🌈',\n      description: 'Uplift your mood and energy',\n      color: '#9F7AEA',\n      exercises: ['energizingBreath', 'moodBoost', 'gratitudeBreath']\n    },\n    everyday: {\n      name: 'Everyday Wellness',\n      icon: '✨',\n      description: 'Daily practices for balanced well-being',\n      color: '#7C3AED',\n      exercises: ['morningBreath', 'afternoonReset', 'mindfulPause', 'quickRefresh']\n    },\n    sleep: {\n      name: 'Sleep & Rest',\n      icon: '🌙',\n      description: 'Wind down and prepare for restful sleep',\n      color: '#6B46C1',\n      exercises: ['sleepPrep', 'eveningCalm', 'deepRelaxation']\n    },\n    energy: {\n      name: 'Energy Boost',\n      icon: '⚡',\n      description: 'Quick energy when you need alertness',\n      color: '#5B21B6',\n      exercises: ['powerBreath', 'focusBoost', 'quickEnergizer']\n    }\n  };\n\n  const exercises = {\n    // STRESS & ANXIETY\n    boxBreathing: {\n      name: 'Box Breathing',\n      duration: 120,\n      quickDuration: 60,\n      category: 'stress',\n      phases: [\n        { name: 'Inhale', duration: 4, instruction: 'Breathe in slowly' },\n        { name: 'Hold', duration: 4, instruction: 'Hold gently' },\n        { name: 'Exhale', duration: 4, instruction: 'Release slowly' },\n        { name: 'Hold', duration: 4, instruction: 'Pause empty' }\n      ],\n      description: 'Navy SEAL technique for instant calm',\n      benefits: 'Reduces stress, anxiety, and panic'\n    },\n    deepBelly: {\n      name: 'Deep Belly Breath',\n      duration: 120,\n      quickDuration: 60,\n      category: 'stress',\n      phases: [\n        { name: 'Inhale', duration: 5, instruction: 'Breathe into your belly' },\n        { name: 'Exhale', duration: 7, instruction: 'Release completely' }\n      ],\n      description: 'Activate your calm nervous system',\n      benefits: 'Lowers heart rate, reduces stress hormones'\n    },\n    calmingBreath: {\n      name: 'Calming 4-7-8',\n      duration: 90,\n      quickDuration: 45,\n      category: 'stress',\n      phases: [\n        { name: 'Inhale', duration: 4, instruction: 'Breathe in through nose' },\n        { name: 'Hold', duration: 7, instruction: 'Hold the breath' },\n        { name: 'Exhale', duration: 8, instruction: 'Exhale through mouth' }\n      ],\n      description: 'Dr. Weil\\'s natural tranquilizer',\n      benefits: 'Calms anxiety, stops panic attacks'\n    },\n    anxietyRelief: {\n      name: 'Anxiety Relief',\n      duration: 180,\n      quickDuration: 90,\n      category: 'stress',\n      phases: [\n        { name: 'Inhale', duration: 3, instruction: 'Slow inhale' },\n        { name: 'Exhale', duration: 6, instruction: 'Long, slow exhale' }\n      ],\n      description: 'Extended exhales for deep calm',\n      benefits: 'Stops racing thoughts, releases tension'\n    },\n\n    // MOOD & DEPRESSION\n    energizingBreath: {\n      name: 'Energizing Breath',\n      duration: 90,\n      quickDuration: 45,\n      category: 'depression',\n      phases: [\n        { name: 'Inhale', duration: 2, instruction: 'Quick, energizing inhale' },\n        { name: 'Exhale', duration: 2, instruction: 'Powerful exhale' }\n      ],\n      description: 'Wake up your body and mind',\n      benefits: 'Increases energy, lifts mood'\n    },\n    moodBoost: {\n      name: 'Mood Boost',\n      duration: 120,\n      quickDuration: 60,\n      category: 'depression',\n      phases: [\n        { name: 'Inhale', duration: 4, instruction: 'Breathe in positivity' },\n        { name: 'Hold', duration: 2, instruction: 'Feel the energy' },\n        { name: 'Exhale', duration: 4, instruction: 'Release negativity' }\n      ],\n      description: 'Shift your emotional state',\n      benefits: 'Improves mood, reduces sadness'\n    },\n    gratitudeBreath: {\n      name: 'Gratitude Breath',\n      duration: 180,\n      quickDuration: 90,\n      category: 'depression',\n      phases: [\n        { name: 'Inhale', duration: 5, instruction: 'Think of something good' },\n        { name: 'Hold', duration: 3, instruction: 'Feel grateful' },\n        { name: 'Exhale', duration: 5, instruction: 'Smile and release' }\n      ],\n      description: 'Combine breathing with gratitude',\n      benefits: 'Lifts depression, creates positive mindset'\n    },\n\n    // EVERYDAY WELLNESS\n    morningBreath: {\n      name: 'Morning Energizer',\n      duration: 120,\n      quickDuration: 60,\n      category: 'everyday',\n      phases: [\n        { name: 'Inhale', duration: 4, instruction: 'Wake up your body' },\n        { name: 'Hold', duration: 2, instruction: 'Feel alive' },\n        { name: 'Exhale', duration: 4, instruction: 'Start fresh' }\n      ],\n      description: 'Perfect way to start your day',\n      benefits: 'Increases alertness, sets positive tone'\n    },\n    afternoonReset: {\n      name: 'Afternoon Reset',\n      duration: 90,\n      quickDuration: 45,\n      category: 'everyday',\n      phases: [\n        { name: 'Inhale', duration: 4, instruction: 'Refresh your mind' },\n        { name: 'Exhale', duration: 4, instruction: 'Release the day' }\n      ],\n      description: 'Mid-day mental refresh',\n      benefits: 'Restores focus, renews energy'\n    },\n    mindfulPause: {\n      name: 'Mindful Pause',\n      duration: 120,\n      quickDuration: 60,\n      category: 'everyday',\n      phases: [\n        { name: 'Notice', duration: 5, instruction: 'Simply observe your breath' }\n      ],\n      description: 'Return to the present moment',\n      benefits: 'Grounds you, improves awareness'\n    },\n    quickRefresh: {\n      name: 'Quick Refresh',\n      duration: 60,\n      quickDuration: 30,\n      category: 'everyday',\n      phases: [\n        { name: 'Inhale', duration: 3, instruction: 'Quick energizing breath' },\n        { name: 'Exhale', duration: 3, instruction: 'Let it go' }\n      ],\n      description: 'Fast reset for busy moments',\n      benefits: 'Instant clarity and calm'\n    },\n\n    // SLEEP & REST\n    sleepPrep: {\n      name: 'Sleep Preparation',\n      duration: 240,\n      quickDuration: 120,\n      category: 'sleep',\n      phases: [\n        { name: 'Inhale', duration: 4, instruction: 'Slow, deep inhale' },\n        { name: 'Exhale', duration: 8, instruction: 'Long, relaxing exhale' }\n      ],\n      description: 'Prepare body and mind for sleep',\n      benefits: 'Improves sleep quality, reduces insomnia'\n    },\n    eveningCalm: {\n      name: 'Evening Calm',\n      duration: 180,\n      quickDuration: 90,\n      category: 'sleep',\n      phases: [\n        { name: 'Inhale', duration: 5, instruction: 'Breathe in peace' },\n        { name: 'Exhale', duration: 7, instruction: 'Release the day' }\n      ],\n      description: 'Wind down after a busy day',\n      benefits: 'Calms mind, prepares for rest'\n    },\n    deepRelaxation: {\n      name: 'Deep Relaxation',\n      duration: 300,\n      quickDuration: 150,\n      category: 'sleep',\n      phases: [\n        { name: 'Inhale', duration: 6, instruction: 'Deep, slow breath' },\n        { name: 'Exhale', duration: 10, instruction: 'Complete release' }\n      ],\n      description: 'Full body and mind relaxation',\n      benefits: 'Deep calm, profound rest'\n    },\n\n    // ENERGY BOOST\n    powerBreath: {\n      name: 'Power Breath',\n      duration: 60,\n      quickDuration: 30,\n      category: 'energy',\n      phases: [\n        { name: 'Inhale', duration: 1, instruction: 'Sharp inhale' },\n        { name: 'Exhale', duration: 1, instruction: 'Forceful exhale' }\n      ],\n      description: 'Instant energy surge',\n      benefits: 'Wakes you up, increases alertness'\n    },\n    focusBoost: {\n      name: 'Focus Boost',\n      duration: 90,\n      quickDuration: 45,\n      category: 'energy',\n      phases: [\n        { name: 'Inhale', duration: 3, instruction: 'Energize your mind' },\n        { name: 'Hold', duration: 2, instruction: 'Build focus' },\n        { name: 'Exhale', duration: 3, instruction: 'Sharp exhale' }\n      ],\n      description: 'Sharpen your concentration',\n      benefits: 'Improves focus, boosts mental clarity'\n    },\n    quickEnergizer: {\n      name: 'Quick Energizer',\n      duration: 45,\n      quickDuration: 30,\n      category: 'energy',\n      phases: [\n        { name: 'Inhale', duration: 2, instruction: 'Fast inhale' },\n        { name: 'Exhale', duration: 2, instruction: 'Quick release' }\n      ],\n      description: '30-second energy boost',\n      benefits: 'Fast energy, instant alertness'\n    }\n  };\n\n  // Feedback questions\n  const feedbackQuestions = [\n    {\n      id: 'feeling',\n      question: 'How do you feel right now?',\n      options: ['Much better', 'Better', 'Same', 'Worse']\n    },\n    {\n      id: 'stress',\n      question: 'Your stress level?',\n      options: ['Low', 'Moderate', 'High', 'Very High']\n    },\n    {\n      id: 'helpful',\n      question: 'Was this session helpful?',\n      options: ['Very helpful', 'Helpful', 'Somewhat', 'Not really']\n    }\n  ];\n\n  // Load data from localStorage\n  useEffect(() => {\n    const savedMetrics = localStorage.getItem('breathworkMetrics');\n    const savedProfile = localStorage.getItem('breathworkProfile');\n    \n    if (savedMetrics) {\n      setMetrics(JSON.parse(savedMetrics));\n    }\n    if (savedProfile) {\n      setProfile(JSON.parse(savedProfile));\n    }\n  }, []);\n\n  // Save data to localStorage\n  useEffect(() => {\n    localStorage.setItem('breathworkMetrics', JSON.stringify(metrics));\n  }, [metrics]);\n\n  useEffect(() => {\n    localStorage.setItem('breathworkProfile', JSON.stringify(profile));\n  }, [profile]);\n\n  // Audio system\n  useEffect(() => {\n    if (audioEnabled && profile.soundEnabled) {\n      if (!audioRef.current) {\n        audioRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n    }\n  }, [audioEnabled, profile.soundEnabled]);\n\n  const playBreathingSound = (phase) => {\n    if (!audioEnabled || !profile.soundEnabled) return;\n    \n    try {\n      const oscillator = audioRef.current.createOscillator();\n      const gainNode = audioRef.current.createGain();\n      \n      oscillator.connect(gainNode);\n      gainNode.connect(audioRef.current.destination);\n      \n      const frequencies = {\n        inhale: 220,\n        hold: 330,\n        exhale: 110,\n        notice: 440\n      };\n      \n      oscillator.frequency.setValueAtTime(frequencies[phase] || 220, audioRef.current.currentTime);\n      oscillator.type = 'sine';\n      \n      gainNode.gain.setValueAtTime(0, audioRef.current.currentTime);\n      gainNode.gain.linearRampToValueAtTime(0.1, audioRef.current.currentTime + 0.1);\n      gainNode.gain.linearRampToValueAtTime(0, audioRef.current.currentTime + 0.5);\n      \n      oscillator.start(audioRef.current.currentTime);\n      oscillator.stop(audioRef.current.currentTime + 0.5);\n    } catch (error) {\n      console.log('Audio not available:', error);\n    }\n  };\n\n  const triggerHapticFeedback = () => {\n    if (profile.hapticEnabled && 'vibrate' in navigator) {\n      navigator.vibrate([50, 30, 50]);\n    }\n  };\n\n  // Start exercise\n  const startExercise = (exerciseKey, isQuick = false) => {\n    const exercise = exercises[exerciseKey];\n    const duration = isQuick ? exercise.quickDuration : exercise.duration;\n    \n    setCurrentExercise({ key: exerciseKey, ...exercise, actualDuration: duration });\n    setTimeLeft(duration);\n    setIsActive(true);\n    setBreathPhase('inhale');\n    setCurrentView('exercise');\n    \n    // Update metrics\n    setMetrics(prev => ({\n      ...prev,\n      totalSessions: prev.totalSessions + 1,\n      totalMinutes: prev.totalMinutes + Math.ceil(duration / 60),\n      lastSession: new Date().toISOString(),\n      categoryUsage: {\n        ...prev.categoryUsage,\n        [exercise.category]: (prev.categoryUsage[exercise.category] || 0) + 1\n      }\n    }));\n    \n    triggerHapticFeedback();\n    playBreathingSound('inhale');\n  };\n\n  // Stop exercise\n  const stopExercise = () => {\n    setIsActive(false);\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    if (phaseIntervalRef.current) clearInterval(phaseIntervalRef.current);\n    \n    // Show feedback\n    setShowFeedback(true);\n  };\n\n  const completeFeedback = (answers) => {\n    setMetrics(prev => ({\n      ...prev,\n      feedbackHistory: [...prev.feedbackHistory, {\n        exerciseKey: currentExercise.key,\n        date: new Date().toISOString(),\n        answers: answers\n      }]\n    }));\n    \n    setCurrentExercise(null);\n    setTimeLeft(0);\n    setBreathPhase('inhale');\n    setShowFeedback(false);\n    setCurrentView('home');\n  };\n\n  const skipFeedback = () => {\n    setCurrentExercise(null);\n    setTimeLeft(0);\n    setBreathPhase('inhale');\n    setShowFeedback(false);\n    setCurrentView('home');\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            setIsActive(false);\n            setShowFeedback(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [isActive, timeLeft]);\n\n  // Breathing phase management\n  useEffect(() => {\n    if (isActive && currentExercise) {\n      let phaseIndex = 0;\n      let phaseStartTime = Date.now();\n\n      phaseIntervalRef.current = setInterval(() => {\n        const currentPhase = currentExercise.phases[phaseIndex];\n        const elapsed = Date.now() - phaseStartTime;\n        const currentPhaseDuration = currentPhase.duration * 1000;\n\n        if (elapsed >= currentPhaseDuration) {\n          phaseIndex = (phaseIndex + 1) % currentExercise.phases.length;\n          phaseStartTime = Date.now();\n          const newPhase = currentExercise.phases[phaseIndex].name.toLowerCase().replace(' ', '');\n          setBreathPhase(newPhase);\n          playBreathingSound(newPhase);\n          triggerHapticFeedback();\n        }\n      }, 100);\n\n      return () => {\n        if (phaseIntervalRef.current) clearInterval(phaseIntervalRef.current);\n      };\n    }\n  }, [isActive, currentExercise]);\n\n  const toggleFavorite = (exerciseKey) => {\n    setMetrics(prev => ({\n      ...prev,\n      favoriteExercises: prev.favoriteExercises.includes(exerciseKey)\n        ? prev.favoriteExercises.filter(key => key !== exerciseKey)\n        : [...prev.favoriteExercises, exerciseKey]\n    }));\n  };\n\n  const updateProfile = (updates) => {\n    setProfile(prev => ({ ...prev, ...updates }));\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Home view\n  const HomeView = () => (\n    <div className=\"home-view\">\n      <div className=\"welcome-section\">\n        <h2>How can we help you today?</h2>\n        <p>Choose what you need right now</p>\n      </div>\n\n      <div className=\"quick-stats\">\n        <div className=\"stat-item\">\n          <span className=\"stat-number\">{metrics.totalSessions}</span>\n          <span className=\"stat-label\">Sessions</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-number\">{metrics.totalMinutes}</span>\n          <span className=\"stat-label\">Minutes</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-number\">{metrics.streak}</span>\n          <span className=\"stat-label\">Day Streak</span>\n        </div>\n      </div>\n\n      <div className=\"categories-grid\">\n        {Object.entries(categories).map(([key, category]) => (\n          <div \n            key={key}\n            className=\"category-card\"\n            style={{ borderLeft: `4px solid ${category.color}` }}\n            onClick={() => {\n              setSelectedCategory(key);\n              setCurrentView('categories');\n            }}\n          >\n            <div className=\"category-icon\">{category.icon}</div>\n            <div className=\"category-content\">\n              <h3>{category.name}</h3>\n              <p>{category.description}</p>\n              <div className=\"category-stats\">\n                <span>{category.exercises.length} exercises</span>\n                <span className=\"usage-count\">\n                  {metrics.categoryUsage[key] || 0} sessions\n                </span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {metrics.favoriteExercises.length > 0 && (\n        <div className=\"favorites-section\">\n          <h3>⭐ Your Favorites</h3>\n          <div className=\"favorites-quick\">\n            {metrics.favoriteExercises.slice(0, 3).map(exerciseKey => (\n              <button\n                key={exerciseKey}\n                className=\"quick-favorite-btn\"\n                onClick={() => startExercise(exerciseKey, true)}\n              >\n                {exercises[exerciseKey].name}\n                <span className=\"quick-label\">Quick</span>\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // Category view\n  const CategoryView = () => {\n    const category = categories[selectedCategory];\n    const categoryExercises = category.exercises.map(key => ({\n      key,\n      ...exercises[key]\n    }));\n\n    return (\n      <div className=\"category-view\">\n        <div className=\"category-header\">\n          <button className=\"back-btn-simple\" onClick={() => setCurrentView('home')}>\n            ← Back\n          </button>\n          <div className=\"category-title\">\n            <span className=\"category-icon-large\">{category.icon}</span>\n            <h2>{category.name}</h2>\n            <p>{category.description}</p>\n          </div>\n        </div>\n\n        <div className=\"exercises-list\">\n          {categoryExercises.map((exercise) => (\n            <div key={exercise.key} className=\"exercise-item\">\n              <div className=\"exercise-info\">\n                <div className=\"exercise-title-row\">\n                  <h3>{exercise.name}</h3>\n                  <button \n                    className=\"favorite-icon-btn\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      toggleFavorite(exercise.key);\n                    }}\n                  >\n                    {metrics.favoriteExercises.includes(exercise.key) ? '❤️' : '🤍'}\n                  </button>\n                </div>\n                <p className=\"exercise-desc\">{exercise.description}</p>\n                <p className=\"exercise-benefit\">✨ {exercise.benefits}</p>\n              </div>\n              <div className=\"exercise-actions\">\n                <button \n                  className=\"quick-start-btn\"\n                  onClick={() => startExercise(exercise.key, true)}\n                >\n                  Quick\n                  <span className=\"time-label\">{Math.ceil(exercise.quickDuration / 60)}m</span>\n                </button>\n                <button \n                  className=\"full-start-btn\"\n                  onClick={() => startExercise(exercise.key, false)}\n                >\n                  Full\n                  <span className=\"time-label\">{Math.ceil(exercise.duration / 60)}m</span>\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  // Exercise view\n  const ExerciseView = () => {\n    const currentPhase = currentExercise?.phases.find(p => \n      p.name.toLowerCase().replace(' ', '') === breathPhase\n    ) || currentExercise?.phases[0];\n\n    return (\n      <div className=\"exercise-active\">\n        <div className=\"exercise-top-bar\">\n          <button className=\"back-btn-simple\" onClick={stopExercise}>\n            ← Exit\n          </button>\n          <div className=\"timer-display\">{formatTime(timeLeft)}</div>\n        </div>\n\n        <div className=\"exercise-title\">\n          <h2>{currentExercise.name}</h2>\n        </div>\n\n        <div className=\"breathing-circle-container\">\n          <div className={`breathing-circle ${breathPhase}`}>\n            <div className=\"circle-inner\">\n              <span className=\"phase-name\">{currentPhase?.name}</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"instruction-text\">\n          <p>{currentPhase?.instruction}</p>\n        </div>\n\n        <div className=\"exercise-progress\">\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ \n                width: `${((currentExercise.actualDuration - timeLeft) / currentExercise.actualDuration) * 100}%` \n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Feedback view\n  const FeedbackView = () => {\n    const [answers, setAnswers] = useState({});\n\n    const handleAnswer = (questionId, answer) => {\n      setAnswers(prev => ({ ...prev, [questionId]: answer }));\n    };\n\n    const isComplete = Object.keys(answers).length === feedbackQuestions.length;\n\n    return (\n      <div className=\"feedback-view\">\n        <div className=\"feedback-header\">\n          <h2>Quick Feedback</h2>\n          <p>How did it go? (Optional)</p>\n        </div>\n\n        <div className=\"feedback-questions\">\n          {feedbackQuestions.map((q) => (\n            <div key={q.id} className=\"feedback-question\">\n              <h3>{q.question}</h3>\n              <div className=\"feedback-options\">\n                {q.options.map((option) => (\n                  <button\n                    key={option}\n                    className={`feedback-option ${answers[q.id] === option ? 'selected' : ''}`}\n                    onClick={() => handleAnswer(q.id, option)}\n                  >\n                    {option}\n                  </button>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"feedback-actions\">\n          <button \n            className=\"skip-feedback-btn\"\n            onClick={skipFeedback}\n          >\n            Skip\n          </button>\n          <button \n            className=\"submit-feedback-btn\"\n            onClick={() => completeFeedback(answers)}\n            disabled={!isComplete}\n          >\n            Done\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  // Profile view\n  const ProfileView = () => (\n    <div className=\"profile-view\">\n      <h2>Your Profile</h2>\n      \n      <div className=\"profile-section\">\n        <label>Name</label>\n        <input \n          type=\"text\" \n          value={profile.name}\n          onChange={(e) => updateProfile({ name: e.target.value })}\n          placeholder=\"Enter your name\"\n        />\n      </div>\n\n      <div className=\"profile-section\">\n        <label>\n          <input \n            type=\"checkbox\" \n            checked={profile.soundEnabled}\n            onChange={(e) => updateProfile({ soundEnabled: e.target.checked })}\n          />\n          Enable Sound\n        </label>\n      </div>\n\n      <div className=\"profile-section\">\n        <label>\n          <input \n            type=\"checkbox\" \n            checked={profile.hapticEnabled}\n            onChange={(e) => updateProfile({ hapticEnabled: e.target.checked })}\n          />\n          Enable Haptic Feedback\n        </label>\n      </div>\n\n      <div className=\"stats-section\">\n        <h3>Your Progress</h3>\n        <div className=\"stats-grid\">\n          <div className=\"stat-box\">\n            <span className=\"stat-value\">{metrics.totalSessions}</span>\n            <span className=\"stat-name\">Total Sessions</span>\n          </div>\n          <div className=\"stat-box\">\n            <span className=\"stat-value\">{metrics.totalMinutes}</span>\n            <span className=\"stat-name\">Minutes</span>\n          </div>\n          <div className=\"stat-box\">\n            <span className=\"stat-value\">{metrics.streak}</span>\n            <span className=\"stat-name\">Day Streak</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"category-usage-section\">\n        <h3>Category Usage</h3>\n        {Object.entries(categories).map(([key, category]) => (\n          <div key={key} className=\"usage-bar\">\n            <span>{category.icon} {category.name}</span>\n            <span className=\"usage-number\">{metrics.categoryUsage[key] || 0}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Settings view\n  const SettingsView = () => (\n    <div className=\"settings-view\">\n      <h2>Settings</h2>\n      \n      <div className=\"settings-section\">\n        <h3>Audio</h3>\n        <label>\n          <input \n            type=\"checkbox\" \n            checked={audioEnabled}\n            onChange={(e) => setAudioEnabled(e.target.checked)}\n          />\n          Enable Audio Cues\n        </label>\n      </div>\n\n      <div className=\"settings-section\">\n        <h3>Weekly Goal</h3>\n        <input \n          type=\"number\" \n          value={metrics.weeklyGoal}\n          onChange={(e) => setMetrics(prev => ({ ...prev, weeklyGoal: parseInt(e.target.value) }))}\n          min=\"1\"\n          max=\"20\"\n        />\n        <p>Sessions per week: {metrics.weeklyGoal}</p>\n      </div>\n\n      <div className=\"settings-section\">\n        <button \n          className=\"reset-btn\"\n          onClick={() => {\n            if (window.confirm('Reset all data?')) {\n              setMetrics({\n                totalSessions: 0,\n                totalMinutes: 0,\n                streak: 0,\n                lastSession: null,\n                favoriteExercises: [],\n                weeklyGoal: 5,\n                weeklyProgress: 0,\n                categoryUsage: {\n                  stress: 0,\n                  depression: 0,\n                  everyday: 0,\n                  energy: 0,\n                  sleep: 0\n                },\n                feedbackHistory: []\n              });\n            }\n          }}\n        >\n          Reset All Data\n        </button>\n      </div>\n    </div>\n  );\n\n  // Navigation component\n  const Navigation = () => (\n    <nav className=\"navigation\">\n      <button \n        className={`nav-btn ${currentView === 'home' ? 'active' : ''}`}\n        onClick={() => setCurrentView('home')}\n      >\n        🏠\n        <span>Home</span>\n      </button>\n      <button \n        className={`nav-btn ${currentView === 'profile' ? 'active' : ''}`}\n        onClick={() => setCurrentView('profile')}\n      >\n        👤\n        <span>Profile</span>\n      </button>\n      <button \n        className={`nav-btn ${currentView === 'settings' ? 'active' : ''}`}\n        onClick={() => setCurrentView('settings')}\n      >\n        ⚙️\n        <span>Settings</span>\n      </button>\n    </nav>\n  );\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Present Breathwork</h1>\n        <p className=\"subtitle\">Your personal wellness companion</p>\n      </header>\n\n      <main className=\"app-main\">\n        {currentView === 'home' && <HomeView />}\n        {currentView === 'categories' && <CategoryView />}\n        {currentView === 'exercise' && !showFeedback && <ExerciseView />}\n        {showFeedback && <FeedbackView />}\n        {currentView === 'profile' && <ProfileView />}\n        {currentView === 'settings' && <SettingsView />}\n      </main>\n\n      {currentView !== 'exercise' && !showFeedback && <Navigation />}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"qIAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB;AACA,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,MAAM,CAAC,CAAE;AACxD,KAAM,CAACU,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC9D,KAAM,CAACY,eAAe,CAAEC,kBAAkB,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CAC3C,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAC,QAAQ,CAAC,CACxD,KAAM,CAACoB,YAAY,CAAEC,eAAe,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAEvD;AACA,KAAM,CAACsB,OAAO,CAAEC,UAAU,CAAC,CAAGvB,QAAQ,CAAC,CACrCwB,aAAa,CAAE,CAAC,CAChBC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,CAAC,CACTC,WAAW,CAAE,IAAI,CACjBC,iBAAiB,CAAE,EAAE,CACrBC,UAAU,CAAE,CAAC,CACbC,cAAc,CAAE,CAAC,CACjBC,aAAa,CAAE,CACbC,MAAM,CAAE,CAAC,CACTC,UAAU,CAAE,CAAC,CACbC,QAAQ,CAAE,CAAC,CACXC,MAAM,CAAE,CAAC,CACTC,KAAK,CAAE,CACT,CAAC,CACDC,eAAe,CAAE,EACnB,CAAC,CAAC,CAEF;AACA,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGvC,QAAQ,CAAC,CACrCwC,IAAI,CAAE,EAAE,CACRC,YAAY,CAAE,IAAI,CAClBC,aAAa,CAAE,IAAI,CACnBC,iBAAiB,CAAE,IACrB,CAAC,CAAC,CAEF;AACA,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAG7C,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAAA8C,QAAQ,CAAG5C,MAAM,CAAC,IAAI,CAAC,CAC7B,KAAM,CAAA6C,WAAW,CAAG7C,MAAM,CAAC,IAAI,CAAC,CAChC,KAAM,CAAA8C,gBAAgB,CAAG9C,MAAM,CAAC,IAAI,CAAC,CAErC;AACA,KAAM,CAAA+C,UAAU,CAAG,CACjBjB,MAAM,CAAE,CACNQ,IAAI,CAAE,kBAAkB,CACxBU,IAAI,CAAE,IAAI,CACVC,WAAW,CAAE,yCAAyC,CACtDC,KAAK,CAAE,SAAS,CAChBC,SAAS,CAAE,CAAC,cAAc,CAAE,WAAW,CAAE,eAAe,CAAE,eAAe,CAC3E,CAAC,CACDpB,UAAU,CAAE,CACVO,IAAI,CAAE,mBAAmB,CACzBU,IAAI,CAAE,IAAI,CACVC,WAAW,CAAE,6BAA6B,CAC1CC,KAAK,CAAE,SAAS,CAChBC,SAAS,CAAE,CAAC,kBAAkB,CAAE,WAAW,CAAE,iBAAiB,CAChE,CAAC,CACDnB,QAAQ,CAAE,CACRM,IAAI,CAAE,mBAAmB,CACzBU,IAAI,CAAE,GAAG,CACTC,WAAW,CAAE,yCAAyC,CACtDC,KAAK,CAAE,SAAS,CAChBC,SAAS,CAAE,CAAC,eAAe,CAAE,gBAAgB,CAAE,cAAc,CAAE,cAAc,CAC/E,CAAC,CACDjB,KAAK,CAAE,CACLI,IAAI,CAAE,cAAc,CACpBU,IAAI,CAAE,IAAI,CACVC,WAAW,CAAE,yCAAyC,CACtDC,KAAK,CAAE,SAAS,CAChBC,SAAS,CAAE,CAAC,WAAW,CAAE,aAAa,CAAE,gBAAgB,CAC1D,CAAC,CACDlB,MAAM,CAAE,CACNK,IAAI,CAAE,cAAc,CACpBU,IAAI,CAAE,GAAG,CACTC,WAAW,CAAE,sCAAsC,CACnDC,KAAK,CAAE,SAAS,CAChBC,SAAS,CAAE,CAAC,aAAa,CAAE,YAAY,CAAE,gBAAgB,CAC3D,CACF,CAAC,CAED,KAAM,CAAAA,SAAS,CAAG,CAChB;AACAC,YAAY,CAAE,CACZd,IAAI,CAAE,eAAe,CACrBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,mBAAoB,CAAC,CACjE,CAAEnB,IAAI,CAAE,MAAM,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,aAAc,CAAC,CACzD,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,gBAAiB,CAAC,CAC9D,CAAEnB,IAAI,CAAE,MAAM,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,aAAc,CAAC,CAC1D,CACDR,WAAW,CAAE,sCAAsC,CACnDS,QAAQ,CAAE,oCACZ,CAAC,CACDC,SAAS,CAAE,CACTrB,IAAI,CAAE,mBAAmB,CACzBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,yBAA0B,CAAC,CACvE,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,oBAAqB,CAAC,CACnE,CACDR,WAAW,CAAE,mCAAmC,CAChDS,QAAQ,CAAE,4CACZ,CAAC,CACDE,aAAa,CAAE,CACbtB,IAAI,CAAE,eAAe,CACrBe,QAAQ,CAAE,EAAE,CACZC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,yBAA0B,CAAC,CACvE,CAAEnB,IAAI,CAAE,MAAM,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,iBAAkB,CAAC,CAC7D,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,sBAAuB,CAAC,CACrE,CACDR,WAAW,CAAE,kCAAkC,CAC/CS,QAAQ,CAAE,oCACZ,CAAC,CACDG,aAAa,CAAE,CACbvB,IAAI,CAAE,gBAAgB,CACtBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,aAAc,CAAC,CAC3D,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,mBAAoB,CAAC,CAClE,CACDR,WAAW,CAAE,gCAAgC,CAC7CS,QAAQ,CAAE,yCACZ,CAAC,CAED;AACAI,gBAAgB,CAAE,CAChBxB,IAAI,CAAE,mBAAmB,CACzBe,QAAQ,CAAE,EAAE,CACZC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,YAAY,CACtBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,0BAA2B,CAAC,CACxE,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,iBAAkB,CAAC,CAChE,CACDR,WAAW,CAAE,4BAA4B,CACzCS,QAAQ,CAAE,8BACZ,CAAC,CACDK,SAAS,CAAE,CACTzB,IAAI,CAAE,YAAY,CAClBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,YAAY,CACtBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,uBAAwB,CAAC,CACrE,CAAEnB,IAAI,CAAE,MAAM,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,iBAAkB,CAAC,CAC7D,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,oBAAqB,CAAC,CACnE,CACDR,WAAW,CAAE,4BAA4B,CACzCS,QAAQ,CAAE,gCACZ,CAAC,CACDM,eAAe,CAAE,CACf1B,IAAI,CAAE,kBAAkB,CACxBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,YAAY,CACtBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,yBAA0B,CAAC,CACvE,CAAEnB,IAAI,CAAE,MAAM,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,eAAgB,CAAC,CAC3D,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,mBAAoB,CAAC,CAClE,CACDR,WAAW,CAAE,kCAAkC,CAC/CS,QAAQ,CAAE,4CACZ,CAAC,CAED;AACAO,aAAa,CAAE,CACb3B,IAAI,CAAE,mBAAmB,CACzBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,UAAU,CACpBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,mBAAoB,CAAC,CACjE,CAAEnB,IAAI,CAAE,MAAM,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,YAAa,CAAC,CACxD,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,aAAc,CAAC,CAC5D,CACDR,WAAW,CAAE,+BAA+B,CAC5CS,QAAQ,CAAE,yCACZ,CAAC,CACDQ,cAAc,CAAE,CACd5B,IAAI,CAAE,iBAAiB,CACvBe,QAAQ,CAAE,EAAE,CACZC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,UAAU,CACpBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,mBAAoB,CAAC,CACjE,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,iBAAkB,CAAC,CAChE,CACDR,WAAW,CAAE,wBAAwB,CACrCS,QAAQ,CAAE,+BACZ,CAAC,CACDS,YAAY,CAAE,CACZ7B,IAAI,CAAE,eAAe,CACrBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,UAAU,CACpBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,4BAA6B,CAAC,CAC3E,CACDR,WAAW,CAAE,8BAA8B,CAC3CS,QAAQ,CAAE,iCACZ,CAAC,CACDU,YAAY,CAAE,CACZ9B,IAAI,CAAE,eAAe,CACrBe,QAAQ,CAAE,EAAE,CACZC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,UAAU,CACpBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,yBAA0B,CAAC,CACvE,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,WAAY,CAAC,CAC1D,CACDR,WAAW,CAAE,6BAA6B,CAC1CS,QAAQ,CAAE,0BACZ,CAAC,CAED;AACAW,SAAS,CAAE,CACT/B,IAAI,CAAE,mBAAmB,CACzBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,GAAG,CAClBC,QAAQ,CAAE,OAAO,CACjBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,mBAAoB,CAAC,CACjE,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,uBAAwB,CAAC,CACtE,CACDR,WAAW,CAAE,iCAAiC,CAC9CS,QAAQ,CAAE,0CACZ,CAAC,CACDY,WAAW,CAAE,CACXhC,IAAI,CAAE,cAAc,CACpBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,OAAO,CACjBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,kBAAmB,CAAC,CAChE,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,iBAAkB,CAAC,CAChE,CACDR,WAAW,CAAE,4BAA4B,CACzCS,QAAQ,CAAE,+BACZ,CAAC,CACDa,cAAc,CAAE,CACdjC,IAAI,CAAE,iBAAiB,CACvBe,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,GAAG,CAClBC,QAAQ,CAAE,OAAO,CACjBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,mBAAoB,CAAC,CACjE,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,EAAE,CAAEI,WAAW,CAAE,kBAAmB,CAAC,CAClE,CACDR,WAAW,CAAE,+BAA+B,CAC5CS,QAAQ,CAAE,0BACZ,CAAC,CAED;AACAc,WAAW,CAAE,CACXlC,IAAI,CAAE,cAAc,CACpBe,QAAQ,CAAE,EAAE,CACZC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,cAAe,CAAC,CAC5D,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,iBAAkB,CAAC,CAChE,CACDR,WAAW,CAAE,sBAAsB,CACnCS,QAAQ,CAAE,mCACZ,CAAC,CACDe,UAAU,CAAE,CACVnC,IAAI,CAAE,aAAa,CACnBe,QAAQ,CAAE,EAAE,CACZC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,oBAAqB,CAAC,CAClE,CAAEnB,IAAI,CAAE,MAAM,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,aAAc,CAAC,CACzD,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,cAAe,CAAC,CAC7D,CACDR,WAAW,CAAE,4BAA4B,CACzCS,QAAQ,CAAE,uCACZ,CAAC,CACDgB,cAAc,CAAE,CACdpC,IAAI,CAAE,iBAAiB,CACvBe,QAAQ,CAAE,EAAE,CACZC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,CACN,CAAElB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,aAAc,CAAC,CAC3D,CAAEnB,IAAI,CAAE,QAAQ,CAAEe,QAAQ,CAAE,CAAC,CAAEI,WAAW,CAAE,eAAgB,CAAC,CAC9D,CACDR,WAAW,CAAE,wBAAwB,CACrCS,QAAQ,CAAE,gCACZ,CACF,CAAC,CAED;AACA,KAAM,CAAAiB,iBAAiB,CAAG,CACxB,CACEC,EAAE,CAAE,SAAS,CACbC,QAAQ,CAAE,4BAA4B,CACtCC,OAAO,CAAE,CAAC,aAAa,CAAE,QAAQ,CAAE,MAAM,CAAE,OAAO,CACpD,CAAC,CACD,CACEF,EAAE,CAAE,QAAQ,CACZC,QAAQ,CAAE,oBAAoB,CAC9BC,OAAO,CAAE,CAAC,KAAK,CAAE,UAAU,CAAE,MAAM,CAAE,WAAW,CAClD,CAAC,CACD,CACEF,EAAE,CAAE,SAAS,CACbC,QAAQ,CAAE,2BAA2B,CACrCC,OAAO,CAAE,CAAC,cAAc,CAAE,SAAS,CAAE,UAAU,CAAE,YAAY,CAC/D,CAAC,CACF,CAED;AACA/E,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgF,YAAY,CAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAC9D,KAAM,CAAAC,YAAY,CAAGF,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAE9D,GAAIF,YAAY,CAAE,CAChB1D,UAAU,CAAC8D,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC,CAAC,CACtC,CACA,GAAIG,YAAY,CAAE,CAChB7C,UAAU,CAAC8C,IAAI,CAACC,KAAK,CAACF,YAAY,CAAC,CAAC,CACtC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAnF,SAAS,CAAC,IAAM,CACdiF,YAAY,CAACK,OAAO,CAAC,mBAAmB,CAAEF,IAAI,CAACG,SAAS,CAAClE,OAAO,CAAC,CAAC,CACpE,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEbrB,SAAS,CAAC,IAAM,CACdiF,YAAY,CAACK,OAAO,CAAC,mBAAmB,CAAEF,IAAI,CAACG,SAAS,CAAClD,OAAO,CAAC,CAAC,CACpE,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEb;AACArC,SAAS,CAAC,IAAM,CACd,GAAI2C,YAAY,EAAIN,OAAO,CAACG,YAAY,CAAE,CACxC,GAAI,CAACK,QAAQ,CAAC2C,OAAO,CAAE,CACrB3C,QAAQ,CAAC2C,OAAO,CAAG,IAAKC,MAAM,CAACC,YAAY,EAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC,CAC7E,CACF,CACF,CAAC,CAAE,CAAChD,YAAY,CAAEN,OAAO,CAACG,YAAY,CAAC,CAAC,CAExC,KAAM,CAAAoD,kBAAkB,CAAIC,KAAK,EAAK,CACpC,GAAI,CAAClD,YAAY,EAAI,CAACN,OAAO,CAACG,YAAY,CAAE,OAE5C,GAAI,CACF,KAAM,CAAAsD,UAAU,CAAGjD,QAAQ,CAAC2C,OAAO,CAACO,gBAAgB,CAAC,CAAC,CACtD,KAAM,CAAAC,QAAQ,CAAGnD,QAAQ,CAAC2C,OAAO,CAACS,UAAU,CAAC,CAAC,CAE9CH,UAAU,CAACI,OAAO,CAACF,QAAQ,CAAC,CAC5BA,QAAQ,CAACE,OAAO,CAACrD,QAAQ,CAAC2C,OAAO,CAACW,WAAW,CAAC,CAE9C,KAAM,CAAAC,WAAW,CAAG,CAClBC,MAAM,CAAE,GAAG,CACXC,IAAI,CAAE,GAAG,CACTC,MAAM,CAAE,GAAG,CACXC,MAAM,CAAE,GACV,CAAC,CAEDV,UAAU,CAACW,SAAS,CAACC,cAAc,CAACN,WAAW,CAACP,KAAK,CAAC,EAAI,GAAG,CAAEhD,QAAQ,CAAC2C,OAAO,CAACmB,WAAW,CAAC,CAC5Fb,UAAU,CAACc,IAAI,CAAG,MAAM,CAExBZ,QAAQ,CAACa,IAAI,CAACH,cAAc,CAAC,CAAC,CAAE7D,QAAQ,CAAC2C,OAAO,CAACmB,WAAW,CAAC,CAC7DX,QAAQ,CAACa,IAAI,CAACC,uBAAuB,CAAC,GAAG,CAAEjE,QAAQ,CAAC2C,OAAO,CAACmB,WAAW,CAAG,GAAG,CAAC,CAC9EX,QAAQ,CAACa,IAAI,CAACC,uBAAuB,CAAC,CAAC,CAAEjE,QAAQ,CAAC2C,OAAO,CAACmB,WAAW,CAAG,GAAG,CAAC,CAE5Eb,UAAU,CAACiB,KAAK,CAAClE,QAAQ,CAAC2C,OAAO,CAACmB,WAAW,CAAC,CAC9Cb,UAAU,CAACkB,IAAI,CAACnE,QAAQ,CAAC2C,OAAO,CAACmB,WAAW,CAAG,GAAG,CAAC,CACrD,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEF,KAAK,CAAC,CAC5C,CACF,CAAC,CAED,KAAM,CAAAG,qBAAqB,CAAGA,CAAA,GAAM,CAClC,GAAI/E,OAAO,CAACI,aAAa,EAAI,SAAS,EAAI,CAAA4E,SAAS,CAAE,CACnDA,SAAS,CAACC,OAAO,CAAC,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAC,CACjC,CACF,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAG,QAAAA,CAACC,WAAW,CAAsB,IAApB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CACjD,KAAM,CAAAG,QAAQ,CAAGzE,SAAS,CAACoE,WAAW,CAAC,CACvC,KAAM,CAAAlE,QAAQ,CAAGmE,OAAO,CAAGI,QAAQ,CAACtE,aAAa,CAAGsE,QAAQ,CAACvE,QAAQ,CAErE1C,kBAAkB,CAAAkH,aAAA,CAAAA,aAAA,EAAGC,GAAG,CAAEP,WAAW,EAAKK,QAAQ,MAAEG,cAAc,CAAE1E,QAAQ,EAAE,CAAC,CAC/EtC,WAAW,CAACsC,QAAQ,CAAC,CACrBxC,WAAW,CAAC,IAAI,CAAC,CACjBI,cAAc,CAAC,QAAQ,CAAC,CACxBV,cAAc,CAAC,UAAU,CAAC,CAE1B;AACAc,UAAU,CAAC2G,IAAI,EAAAH,aAAA,CAAAA,aAAA,IACVG,IAAI,MACP1G,aAAa,CAAE0G,IAAI,CAAC1G,aAAa,CAAG,CAAC,CACrCC,YAAY,CAAEyG,IAAI,CAACzG,YAAY,CAAG0G,IAAI,CAACC,IAAI,CAAC7E,QAAQ,CAAG,EAAE,CAAC,CAC1D5B,WAAW,CAAE,GAAI,CAAA0G,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACrCvG,aAAa,CAAAgG,aAAA,CAAAA,aAAA,IACRG,IAAI,CAACnG,aAAa,MACrB,CAAC+F,QAAQ,CAACrE,QAAQ,EAAG,CAACyE,IAAI,CAACnG,aAAa,CAAC+F,QAAQ,CAACrE,QAAQ,CAAC,EAAI,CAAC,EAAI,CAAC,EACtE,EACD,CAAC,CAEH4D,qBAAqB,CAAC,CAAC,CACvBxB,kBAAkB,CAAC,QAAQ,CAAC,CAC9B,CAAC,CAED;AACA,KAAM,CAAA0C,YAAY,CAAGA,CAAA,GAAM,CACzBxH,WAAW,CAAC,KAAK,CAAC,CAClB,GAAIgC,WAAW,CAAC0C,OAAO,CAAE+C,aAAa,CAACzF,WAAW,CAAC0C,OAAO,CAAC,CAC3D,GAAIzC,gBAAgB,CAACyC,OAAO,CAAE+C,aAAa,CAACxF,gBAAgB,CAACyC,OAAO,CAAC,CAErE;AACApE,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED,KAAM,CAAAoH,gBAAgB,CAAIC,OAAO,EAAK,CACpCnH,UAAU,CAAC2G,IAAI,EAAAH,aAAA,CAAAA,aAAA,IACVG,IAAI,MACP7F,eAAe,CAAE,CAAC,GAAG6F,IAAI,CAAC7F,eAAe,CAAE,CACzCoF,WAAW,CAAE7G,eAAe,CAACoH,GAAG,CAChCW,IAAI,CAAE,GAAI,CAAAN,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAC9BI,OAAO,CAAEA,OACX,CAAC,CAAC,EACF,CAAC,CAEH7H,kBAAkB,CAAC,IAAI,CAAC,CACxBI,WAAW,CAAC,CAAC,CAAC,CACdE,cAAc,CAAC,QAAQ,CAAC,CACxBE,eAAe,CAAC,KAAK,CAAC,CACtBZ,cAAc,CAAC,MAAM,CAAC,CACxB,CAAC,CAED,KAAM,CAAAmI,YAAY,CAAGA,CAAA,GAAM,CACzB/H,kBAAkB,CAAC,IAAI,CAAC,CACxBI,WAAW,CAAC,CAAC,CAAC,CACdE,cAAc,CAAC,QAAQ,CAAC,CACxBE,eAAe,CAAC,KAAK,CAAC,CACtBZ,cAAc,CAAC,MAAM,CAAC,CACxB,CAAC,CAED;AACAR,SAAS,CAAC,IAAM,CACd,GAAIa,QAAQ,EAAIE,QAAQ,CAAG,CAAC,CAAE,CAC5B+B,WAAW,CAAC0C,OAAO,CAAGoD,WAAW,CAAC,IAAM,CACtC5H,WAAW,CAACiH,IAAI,EAAI,CAClB,GAAIA,IAAI,EAAI,CAAC,CAAE,CACbnH,WAAW,CAAC,KAAK,CAAC,CAClBM,eAAe,CAAC,IAAI,CAAC,CACrB,MAAO,EAAC,CACV,CACA,MAAO,CAAA6G,IAAI,CAAG,CAAC,CACjB,CAAC,CAAC,CACJ,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,IAAM,CACL,GAAInF,WAAW,CAAC0C,OAAO,CAAE+C,aAAa,CAACzF,WAAW,CAAC0C,OAAO,CAAC,CAC7D,CAEA,MAAO,IAAM,CACX,GAAI1C,WAAW,CAAC0C,OAAO,CAAE+C,aAAa,CAACzF,WAAW,CAAC0C,OAAO,CAAC,CAC7D,CAAC,CACH,CAAC,CAAE,CAAC3E,QAAQ,CAAEE,QAAQ,CAAC,CAAC,CAExB;AACAf,SAAS,CAAC,IAAM,CACd,GAAIa,QAAQ,EAAIF,eAAe,CAAE,CAC/B,GAAI,CAAAkI,UAAU,CAAG,CAAC,CAClB,GAAI,CAAAC,cAAc,CAAGV,IAAI,CAACW,GAAG,CAAC,CAAC,CAE/BhG,gBAAgB,CAACyC,OAAO,CAAGoD,WAAW,CAAC,IAAM,CAC3C,KAAM,CAAAI,YAAY,CAAGrI,eAAe,CAAC8C,MAAM,CAACoF,UAAU,CAAC,CACvD,KAAM,CAAAI,OAAO,CAAGb,IAAI,CAACW,GAAG,CAAC,CAAC,CAAGD,cAAc,CAC3C,KAAM,CAAAI,oBAAoB,CAAGF,YAAY,CAAC1F,QAAQ,CAAG,IAAI,CAEzD,GAAI2F,OAAO,EAAIC,oBAAoB,CAAE,CACnCL,UAAU,CAAG,CAACA,UAAU,CAAG,CAAC,EAAIlI,eAAe,CAAC8C,MAAM,CAACkE,MAAM,CAC7DmB,cAAc,CAAGV,IAAI,CAACW,GAAG,CAAC,CAAC,CAC3B,KAAM,CAAAI,QAAQ,CAAGxI,eAAe,CAAC8C,MAAM,CAACoF,UAAU,CAAC,CAACtG,IAAI,CAAC6G,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CACvFnI,cAAc,CAACiI,QAAQ,CAAC,CACxBvD,kBAAkB,CAACuD,QAAQ,CAAC,CAC5B/B,qBAAqB,CAAC,CAAC,CACzB,CACF,CAAC,CAAE,GAAG,CAAC,CAEP,MAAO,IAAM,CACX,GAAIrE,gBAAgB,CAACyC,OAAO,CAAE+C,aAAa,CAACxF,gBAAgB,CAACyC,OAAO,CAAC,CACvE,CAAC,CACH,CACF,CAAC,CAAE,CAAC3E,QAAQ,CAAEF,eAAe,CAAC,CAAC,CAE/B,KAAM,CAAA2I,cAAc,CAAI9B,WAAW,EAAK,CACtClG,UAAU,CAAC2G,IAAI,EAAAH,aAAA,CAAAA,aAAA,IACVG,IAAI,MACPtG,iBAAiB,CAAEsG,IAAI,CAACtG,iBAAiB,CAAC4H,QAAQ,CAAC/B,WAAW,CAAC,CAC3DS,IAAI,CAACtG,iBAAiB,CAAC6H,MAAM,CAACzB,GAAG,EAAIA,GAAG,GAAKP,WAAW,CAAC,CACzD,CAAC,GAAGS,IAAI,CAACtG,iBAAiB,CAAE6F,WAAW,CAAC,EAC5C,CAAC,CACL,CAAC,CAED,KAAM,CAAAiC,aAAa,CAAIC,OAAO,EAAK,CACjCpH,UAAU,CAAC2F,IAAI,EAAAH,aAAA,CAAAA,aAAA,IAAUG,IAAI,EAAKyB,OAAO,CAAG,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAC,UAAU,CAAIC,OAAO,EAAK,CAC9B,KAAM,CAAAC,IAAI,CAAG3B,IAAI,CAAC4B,KAAK,CAACF,OAAO,CAAG,EAAE,CAAC,CACrC,KAAM,CAAAG,IAAI,CAAGH,OAAO,CAAG,EAAE,CACzB,SAAAI,MAAA,CAAUH,IAAI,MAAAG,MAAA,CAAID,IAAI,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,EACpD,CAAC,CAED;AACA,KAAM,CAAAC,QAAQ,CAAGA,CAAA,gBACf9J,KAAA,QAAK+J,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBhK,KAAA,QAAK+J,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BlK,IAAA,OAAAkK,QAAA,CAAI,4BAA0B,CAAI,CAAC,cACnClK,IAAA,MAAAkK,QAAA,CAAG,gCAA8B,CAAG,CAAC,EAClC,CAAC,cAENhK,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhK,KAAA,QAAK+J,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBlK,IAAA,SAAMiK,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEhJ,OAAO,CAACE,aAAa,CAAO,CAAC,cAC5DpB,IAAA,SAAMiK,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,EACzC,CAAC,cACNhK,KAAA,QAAK+J,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBlK,IAAA,SAAMiK,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEhJ,OAAO,CAACG,YAAY,CAAO,CAAC,cAC3DrB,IAAA,SAAMiK,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,SAAO,CAAM,CAAC,EACxC,CAAC,cACNhK,KAAA,QAAK+J,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBlK,IAAA,SAAMiK,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEhJ,OAAO,CAACI,MAAM,CAAO,CAAC,cACrDtB,IAAA,SAAMiK,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,EAC3C,CAAC,EACH,CAAC,cAENlK,IAAA,QAAKiK,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7BC,MAAM,CAACC,OAAO,CAACvH,UAAU,CAAC,CAACwH,GAAG,CAACC,IAAA,MAAC,CAAC1C,GAAG,CAAEvE,QAAQ,CAAC,CAAAiH,IAAA,oBAC9CpK,KAAA,QAEE+J,SAAS,CAAC,eAAe,CACzBM,KAAK,CAAE,CAAEC,UAAU,cAAAX,MAAA,CAAexG,QAAQ,CAACL,KAAK,CAAG,CAAE,CACrDyH,OAAO,CAAEA,CAAA,GAAM,CACblK,mBAAmB,CAACqH,GAAG,CAAC,CACxBvH,cAAc,CAAC,YAAY,CAAC,CAC9B,CAAE,CAAA6J,QAAA,eAEFlK,IAAA,QAAKiK,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAE7G,QAAQ,CAACP,IAAI,CAAM,CAAC,cACpD5C,KAAA,QAAK+J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BlK,IAAA,OAAAkK,QAAA,CAAK7G,QAAQ,CAACjB,IAAI,CAAK,CAAC,cACxBpC,IAAA,MAAAkK,QAAA,CAAI7G,QAAQ,CAACN,WAAW,CAAI,CAAC,cAC7B7C,KAAA,QAAK+J,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BhK,KAAA,SAAAgK,QAAA,EAAO7G,QAAQ,CAACJ,SAAS,CAACuE,MAAM,CAAC,YAAU,EAAM,CAAC,cAClDtH,KAAA,SAAM+J,SAAS,CAAC,aAAa,CAAAC,QAAA,EAC1BhJ,OAAO,CAACS,aAAa,CAACiG,GAAG,CAAC,EAAI,CAAC,CAAC,WACnC,EAAM,CAAC,EACJ,CAAC,EACH,CAAC,GAlBDA,GAmBF,CAAC,EACP,CAAC,CACC,CAAC,CAEL1G,OAAO,CAACM,iBAAiB,CAACgG,MAAM,CAAG,CAAC,eACnCtH,KAAA,QAAK+J,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChClK,IAAA,OAAAkK,QAAA,CAAI,uBAAgB,CAAI,CAAC,cACzBlK,IAAA,QAAKiK,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7BhJ,OAAO,CAACM,iBAAiB,CAACkJ,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAACL,GAAG,CAAChD,WAAW,eACpDnH,KAAA,WAEE+J,SAAS,CAAC,oBAAoB,CAC9BQ,OAAO,CAAEA,CAAA,GAAMrD,aAAa,CAACC,WAAW,CAAE,IAAI,CAAE,CAAA6C,QAAA,EAE/CjH,SAAS,CAACoE,WAAW,CAAC,CAACjF,IAAI,cAC5BpC,IAAA,SAAMiK,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,OAAK,CAAM,CAAC,GALrC7C,WAMC,CACT,CAAC,CACC,CAAC,EACH,CACN,EACE,CACN,CAED;AACA,KAAM,CAAAsD,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAtH,QAAQ,CAAGR,UAAU,CAACvC,gBAAgB,CAAC,CAC7C,KAAM,CAAAsK,iBAAiB,CAAGvH,QAAQ,CAACJ,SAAS,CAACoH,GAAG,CAACzC,GAAG,EAAAD,aAAA,EAClDC,GAAG,EACA3E,SAAS,CAAC2E,GAAG,CAAC,CACjB,CAAC,CAEH,mBACE1H,KAAA,QAAK+J,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BhK,KAAA,QAAK+J,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BlK,IAAA,WAAQiK,SAAS,CAAC,iBAAiB,CAACQ,OAAO,CAAEA,CAAA,GAAMpK,cAAc,CAAC,MAAM,CAAE,CAAA6J,QAAA,CAAC,aAE3E,CAAQ,CAAC,cACThK,KAAA,QAAK+J,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BlK,IAAA,SAAMiK,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAE7G,QAAQ,CAACP,IAAI,CAAO,CAAC,cAC5D9C,IAAA,OAAAkK,QAAA,CAAK7G,QAAQ,CAACjB,IAAI,CAAK,CAAC,cACxBpC,IAAA,MAAAkK,QAAA,CAAI7G,QAAQ,CAACN,WAAW,CAAI,CAAC,EAC1B,CAAC,EACH,CAAC,cAEN/C,IAAA,QAAKiK,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5BU,iBAAiB,CAACP,GAAG,CAAE3C,QAAQ,eAC9BxH,KAAA,QAAwB+J,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC/ChK,KAAA,QAAK+J,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BhK,KAAA,QAAK+J,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjClK,IAAA,OAAAkK,QAAA,CAAKxC,QAAQ,CAACtF,IAAI,CAAK,CAAC,cACxBpC,IAAA,WACEiK,SAAS,CAAC,mBAAmB,CAC7BQ,OAAO,CAAGI,CAAC,EAAK,CACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CACnB3B,cAAc,CAACzB,QAAQ,CAACE,GAAG,CAAC,CAC9B,CAAE,CAAAsC,QAAA,CAEDhJ,OAAO,CAACM,iBAAiB,CAAC4H,QAAQ,CAAC1B,QAAQ,CAACE,GAAG,CAAC,CAAG,IAAI,CAAG,IAAI,CACzD,CAAC,EACN,CAAC,cACN5H,IAAA,MAAGiK,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAExC,QAAQ,CAAC3E,WAAW,CAAI,CAAC,cACvD7C,KAAA,MAAG+J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAAC,SAAE,CAACxC,QAAQ,CAAClE,QAAQ,EAAI,CAAC,EACtD,CAAC,cACNtD,KAAA,QAAK+J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BhK,KAAA,WACE+J,SAAS,CAAC,iBAAiB,CAC3BQ,OAAO,CAAEA,CAAA,GAAMrD,aAAa,CAACM,QAAQ,CAACE,GAAG,CAAE,IAAI,CAAE,CAAAsC,QAAA,EAClD,OAEC,cAAAhK,KAAA,SAAM+J,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAEnC,IAAI,CAACC,IAAI,CAACN,QAAQ,CAACtE,aAAa,CAAG,EAAE,CAAC,CAAC,GAAC,EAAM,CAAC,EACvE,CAAC,cACTlD,KAAA,WACE+J,SAAS,CAAC,gBAAgB,CAC1BQ,OAAO,CAAEA,CAAA,GAAMrD,aAAa,CAACM,QAAQ,CAACE,GAAG,CAAE,KAAK,CAAE,CAAAsC,QAAA,EACnD,MAEC,cAAAhK,KAAA,SAAM+J,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAEnC,IAAI,CAACC,IAAI,CAACN,QAAQ,CAACvE,QAAQ,CAAG,EAAE,CAAC,CAAC,GAAC,EAAM,CAAC,EAClE,CAAC,EACN,CAAC,GAhCEuE,QAAQ,CAACE,GAiCd,CACN,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAmD,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAlC,YAAY,CAAG,CAAArI,eAAe,SAAfA,eAAe,iBAAfA,eAAe,CAAE8C,MAAM,CAAC0H,IAAI,CAACC,CAAC,EACjDA,CAAC,CAAC7I,IAAI,CAAC6G,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,GAAKpI,WAC5C,CAAC,IAAIN,eAAe,SAAfA,eAAe,iBAAfA,eAAe,CAAE8C,MAAM,CAAC,CAAC,CAAC,EAE/B,mBACEpD,KAAA,QAAK+J,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BhK,KAAA,QAAK+J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BlK,IAAA,WAAQiK,SAAS,CAAC,iBAAiB,CAACQ,OAAO,CAAEtC,YAAa,CAAA+B,QAAA,CAAC,aAE3D,CAAQ,CAAC,cACTlK,IAAA,QAAKiK,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEV,UAAU,CAAC5I,QAAQ,CAAC,CAAM,CAAC,EACxD,CAAC,cAENZ,IAAA,QAAKiK,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BlK,IAAA,OAAAkK,QAAA,CAAK1J,eAAe,CAAC4B,IAAI,CAAK,CAAC,CAC5B,CAAC,cAENpC,IAAA,QAAKiK,SAAS,CAAC,4BAA4B,CAAAC,QAAA,cACzClK,IAAA,QAAKiK,SAAS,qBAAAJ,MAAA,CAAsB/I,WAAW,CAAG,CAAAoJ,QAAA,cAChDlK,IAAA,QAAKiK,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BlK,IAAA,SAAMiK,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAErB,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEzG,IAAI,CAAO,CAAC,CACrD,CAAC,CACH,CAAC,CACH,CAAC,cAENpC,IAAA,QAAKiK,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BlK,IAAA,MAAAkK,QAAA,CAAIrB,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEtF,WAAW,CAAI,CAAC,CAC/B,CAAC,cAENvD,IAAA,QAAKiK,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChClK,IAAA,QAAKiK,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BlK,IAAA,QACEiK,SAAS,CAAC,eAAe,CACzBM,KAAK,CAAE,CACLW,KAAK,IAAArB,MAAA,CAAM,CAACrJ,eAAe,CAACqH,cAAc,CAAGjH,QAAQ,EAAIJ,eAAe,CAACqH,cAAc,CAAI,GAAG,KAChG,CAAE,CACH,CAAC,CACC,CAAC,CACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAsD,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAC7C,OAAO,CAAE8C,UAAU,CAAC,CAAGxL,QAAQ,CAAC,CAAC,CAAC,CAAC,CAE1C,KAAM,CAAAyL,YAAY,CAAGA,CAACC,UAAU,CAAEC,MAAM,GAAK,CAC3CH,UAAU,CAACtD,IAAI,EAAAH,aAAA,CAAAA,aAAA,IAAUG,IAAI,MAAE,CAACwD,UAAU,EAAGC,MAAM,EAAG,CAAC,CACzD,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGrB,MAAM,CAACsB,IAAI,CAACnD,OAAO,CAAC,CAACd,MAAM,GAAK/C,iBAAiB,CAAC+C,MAAM,CAE3E,mBACEtH,KAAA,QAAK+J,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BhK,KAAA,QAAK+J,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BlK,IAAA,OAAAkK,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBlK,IAAA,MAAAkK,QAAA,CAAG,2BAAyB,CAAG,CAAC,EAC7B,CAAC,cAENlK,IAAA,QAAKiK,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAChCzF,iBAAiB,CAAC4F,GAAG,CAAEqB,CAAC,eACvBxL,KAAA,QAAgB+J,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC3ClK,IAAA,OAAAkK,QAAA,CAAKwB,CAAC,CAAC/G,QAAQ,CAAK,CAAC,cACrB3E,IAAA,QAAKiK,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC9BwB,CAAC,CAAC9G,OAAO,CAACyF,GAAG,CAAEsB,MAAM,eACpB3L,IAAA,WAEEiK,SAAS,oBAAAJ,MAAA,CAAqBvB,OAAO,CAACoD,CAAC,CAAChH,EAAE,CAAC,GAAKiH,MAAM,CAAG,UAAU,CAAG,EAAE,CAAG,CAC3ElB,OAAO,CAAEA,CAAA,GAAMY,YAAY,CAACK,CAAC,CAAChH,EAAE,CAAEiH,MAAM,CAAE,CAAAzB,QAAA,CAEzCyB,MAAM,EAJFA,MAKC,CACT,CAAC,CACC,CAAC,GAZED,CAAC,CAAChH,EAaP,CACN,CAAC,CACC,CAAC,cAENxE,KAAA,QAAK+J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BlK,IAAA,WACEiK,SAAS,CAAC,mBAAmB,CAC7BQ,OAAO,CAAEjC,YAAa,CAAA0B,QAAA,CACvB,MAED,CAAQ,CAAC,cACTlK,IAAA,WACEiK,SAAS,CAAC,qBAAqB,CAC/BQ,OAAO,CAAEA,CAAA,GAAMpC,gBAAgB,CAACC,OAAO,CAAE,CACzCsD,QAAQ,CAAE,CAACJ,UAAW,CAAAtB,QAAA,CACvB,MAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAA2B,WAAW,CAAGA,CAAA,gBAClB3L,KAAA,QAAK+J,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlK,IAAA,OAAAkK,QAAA,CAAI,cAAY,CAAI,CAAC,cAErBhK,KAAA,QAAK+J,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BlK,IAAA,UAAAkK,QAAA,CAAO,MAAI,CAAO,CAAC,cACnBlK,IAAA,UACEyG,IAAI,CAAC,MAAM,CACXqF,KAAK,CAAE5J,OAAO,CAACE,IAAK,CACpB2J,QAAQ,CAAGlB,CAAC,EAAKvB,aAAa,CAAC,CAAElH,IAAI,CAAEyI,CAAC,CAACmB,MAAM,CAACF,KAAM,CAAC,CAAE,CACzDG,WAAW,CAAC,iBAAiB,CAC9B,CAAC,EACC,CAAC,cAENjM,IAAA,QAAKiK,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BhK,KAAA,UAAAgK,QAAA,eACElK,IAAA,UACEyG,IAAI,CAAC,UAAU,CACfyF,OAAO,CAAEhK,OAAO,CAACG,YAAa,CAC9B0J,QAAQ,CAAGlB,CAAC,EAAKvB,aAAa,CAAC,CAAEjH,YAAY,CAAEwI,CAAC,CAACmB,MAAM,CAACE,OAAQ,CAAC,CAAE,CACpE,CAAC,eAEJ,EAAO,CAAC,CACL,CAAC,cAENlM,IAAA,QAAKiK,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BhK,KAAA,UAAAgK,QAAA,eACElK,IAAA,UACEyG,IAAI,CAAC,UAAU,CACfyF,OAAO,CAAEhK,OAAO,CAACI,aAAc,CAC/ByJ,QAAQ,CAAGlB,CAAC,EAAKvB,aAAa,CAAC,CAAEhH,aAAa,CAAEuI,CAAC,CAACmB,MAAM,CAACE,OAAQ,CAAC,CAAE,CACrE,CAAC,yBAEJ,EAAO,CAAC,CACL,CAAC,cAENhM,KAAA,QAAK+J,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BlK,IAAA,OAAAkK,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBhK,KAAA,QAAK+J,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhK,KAAA,QAAK+J,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBlK,IAAA,SAAMiK,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEhJ,OAAO,CAACE,aAAa,CAAO,CAAC,cAC3DpB,IAAA,SAAMiK,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,gBAAc,CAAM,CAAC,EAC9C,CAAC,cACNhK,KAAA,QAAK+J,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBlK,IAAA,SAAMiK,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEhJ,OAAO,CAACG,YAAY,CAAO,CAAC,cAC1DrB,IAAA,SAAMiK,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,SAAO,CAAM,CAAC,EACvC,CAAC,cACNhK,KAAA,QAAK+J,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBlK,IAAA,SAAMiK,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEhJ,OAAO,CAACI,MAAM,CAAO,CAAC,cACpDtB,IAAA,SAAMiK,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,EAC1C,CAAC,EACH,CAAC,EACH,CAAC,cAENhK,KAAA,QAAK+J,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACrClK,IAAA,OAAAkK,QAAA,CAAI,gBAAc,CAAI,CAAC,CACtBC,MAAM,CAACC,OAAO,CAACvH,UAAU,CAAC,CAACwH,GAAG,CAAC8B,KAAA,MAAC,CAACvE,GAAG,CAAEvE,QAAQ,CAAC,CAAA8I,KAAA,oBAC9CjM,KAAA,QAAe+J,SAAS,CAAC,WAAW,CAAAC,QAAA,eAClChK,KAAA,SAAAgK,QAAA,EAAO7G,QAAQ,CAACP,IAAI,CAAC,GAAC,CAACO,QAAQ,CAACjB,IAAI,EAAO,CAAC,cAC5CpC,IAAA,SAAMiK,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEhJ,OAAO,CAACS,aAAa,CAACiG,GAAG,CAAC,EAAI,CAAC,CAAO,CAAC,GAF/DA,GAGL,CAAC,EACP,CAAC,EACC,CAAC,EACH,CACN,CAED;AACA,KAAM,CAAAwE,YAAY,CAAGA,CAAA,gBACnBlM,KAAA,QAAK+J,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BlK,IAAA,OAAAkK,QAAA,CAAI,UAAQ,CAAI,CAAC,cAEjBhK,KAAA,QAAK+J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BlK,IAAA,OAAAkK,QAAA,CAAI,OAAK,CAAI,CAAC,cACdhK,KAAA,UAAAgK,QAAA,eACElK,IAAA,UACEyG,IAAI,CAAC,UAAU,CACfyF,OAAO,CAAE1J,YAAa,CACtBuJ,QAAQ,CAAGlB,CAAC,EAAKpI,eAAe,CAACoI,CAAC,CAACmB,MAAM,CAACE,OAAO,CAAE,CACpD,CAAC,oBAEJ,EAAO,CAAC,EACL,CAAC,cAENhM,KAAA,QAAK+J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BlK,IAAA,OAAAkK,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBlK,IAAA,UACEyG,IAAI,CAAC,QAAQ,CACbqF,KAAK,CAAE5K,OAAO,CAACO,UAAW,CAC1BsK,QAAQ,CAAGlB,CAAC,EAAK1J,UAAU,CAAC2G,IAAI,EAAAH,aAAA,CAAAA,aAAA,IAAUG,IAAI,MAAErG,UAAU,CAAE4K,QAAQ,CAACxB,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAC,EAAG,CAAE,CACzFQ,GAAG,CAAC,GAAG,CACPC,GAAG,CAAC,IAAI,CACT,CAAC,cACFrM,KAAA,MAAAgK,QAAA,EAAG,qBAAmB,CAAChJ,OAAO,CAACO,UAAU,EAAI,CAAC,EAC3C,CAAC,cAENzB,IAAA,QAAKiK,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BlK,IAAA,WACEiK,SAAS,CAAC,WAAW,CACrBQ,OAAO,CAAEA,CAAA,GAAM,CACb,GAAInF,MAAM,CAACkH,OAAO,CAAC,iBAAiB,CAAC,CAAE,CACrCrL,UAAU,CAAC,CACTC,aAAa,CAAE,CAAC,CAChBC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,CAAC,CACTC,WAAW,CAAE,IAAI,CACjBC,iBAAiB,CAAE,EAAE,CACrBC,UAAU,CAAE,CAAC,CACbC,cAAc,CAAE,CAAC,CACjBC,aAAa,CAAE,CACbC,MAAM,CAAE,CAAC,CACTC,UAAU,CAAE,CAAC,CACbC,QAAQ,CAAE,CAAC,CACXC,MAAM,CAAE,CAAC,CACTC,KAAK,CAAE,CACT,CAAC,CACDC,eAAe,CAAE,EACnB,CAAC,CAAC,CACJ,CACF,CAAE,CAAAiI,QAAA,CACH,gBAED,CAAQ,CAAC,CACN,CAAC,EACH,CACN,CAED;AACA,KAAM,CAAAuC,UAAU,CAAGA,CAAA,gBACjBvM,KAAA,QAAK+J,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhK,KAAA,WACE+J,SAAS,YAAAJ,MAAA,CAAazJ,WAAW,GAAK,MAAM,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC/DqK,OAAO,CAAEA,CAAA,GAAMpK,cAAc,CAAC,MAAM,CAAE,CAAA6J,QAAA,EACvC,cAEC,cAAAlK,IAAA,SAAAkK,QAAA,CAAM,MAAI,CAAM,CAAC,EACX,CAAC,cACThK,KAAA,WACE+J,SAAS,YAAAJ,MAAA,CAAazJ,WAAW,GAAK,SAAS,CAAG,QAAQ,CAAG,EAAE,CAAG,CAClEqK,OAAO,CAAEA,CAAA,GAAMpK,cAAc,CAAC,SAAS,CAAE,CAAA6J,QAAA,EAC1C,cAEC,cAAAlK,IAAA,SAAAkK,QAAA,CAAM,SAAO,CAAM,CAAC,EACd,CAAC,cACThK,KAAA,WACE+J,SAAS,YAAAJ,MAAA,CAAazJ,WAAW,GAAK,UAAU,CAAG,QAAQ,CAAG,EAAE,CAAG,CACnEqK,OAAO,CAAEA,CAAA,GAAMpK,cAAc,CAAC,UAAU,CAAE,CAAA6J,QAAA,EAC3C,cAEC,cAAAlK,IAAA,SAAAkK,QAAA,CAAM,UAAQ,CAAM,CAAC,EACf,CAAC,EACN,CACN,CAED,mBACEhK,KAAA,QAAK+J,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBhK,KAAA,WAAQ+J,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5BlK,IAAA,OAAAkK,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BlK,IAAA,MAAGiK,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,kCAAgC,CAAG,CAAC,EACtD,CAAC,cAEThK,KAAA,SAAM+J,SAAS,CAAC,UAAU,CAAAC,QAAA,EACvB9J,WAAW,GAAK,MAAM,eAAIJ,IAAA,CAACgK,QAAQ,GAAE,CAAC,CACtC5J,WAAW,GAAK,YAAY,eAAIJ,IAAA,CAAC2K,YAAY,GAAE,CAAC,CAChDvK,WAAW,GAAK,UAAU,EAAI,CAACY,YAAY,eAAIhB,IAAA,CAAC+K,YAAY,GAAE,CAAC,CAC/D/J,YAAY,eAAIhB,IAAA,CAACmL,YAAY,GAAE,CAAC,CAChC/K,WAAW,GAAK,SAAS,eAAIJ,IAAA,CAAC6L,WAAW,GAAE,CAAC,CAC5CzL,WAAW,GAAK,UAAU,eAAIJ,IAAA,CAACoM,YAAY,GAAE,CAAC,EAC3C,CAAC,CAENhM,WAAW,GAAK,UAAU,EAAI,CAACY,YAAY,eAAIhB,IAAA,CAACyM,UAAU,GAAE,CAAC,EAC3D,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtM,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}