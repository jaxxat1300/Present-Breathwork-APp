{"ast":null,"code":"import _objectSpread from\"/Users/iamcoolsuz/Desktop/Present Breathwork APp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{var _currentExercise$phas;// State management\nconst[currentExercise,setCurrentExercise]=useState(null);const[isActive,setIsActive]=useState(false);const[timeLeft,setTimeLeft]=useState(0);const[breathPhase,setBreathPhase]=useState('inhale');// inhale, hold1, exhale, hold2\nconst[phaseTime,setPhaseTime]=useState(0);const[metrics,setMetrics]=useState({amUsage:0,pmUsage:0,benefitCount:0});const intervalRef=useRef(null);const phaseIntervalRef=useRef(null);// Load metrics from localStorage on component mount\nuseEffect(()=>{const savedMetrics=localStorage.getItem('breathworkMetrics');if(savedMetrics){setMetrics(JSON.parse(savedMetrics));}},[]);// Save metrics to localStorage whenever they change\nuseEffect(()=>{localStorage.setItem('breathworkMetrics',JSON.stringify(metrics));},[metrics]);// Track usage based on time of day\nconst trackUsage=()=>{const now=new Date();const hour=now.getHours();if(hour<12){setMetrics(prev=>_objectSpread(_objectSpread({},prev),{},{amUsage:prev.amUsage+1}));}else{setMetrics(prev=>_objectSpread(_objectSpread({},prev),{},{pmUsage:prev.pmUsage+1}));}};// Mobile haptic feedback simulation\nconst triggerHapticFeedback=()=>{if('vibrate'in navigator){navigator.vibrate(50);// Short vibration\n}};// Mobile touch handlers\nconst handleTouchStart=e=>{e.currentTarget.style.transform='scale(0.95)';};const handleTouchEnd=e=>{e.currentTarget.style.transform='';};// Exercise configurations\nconst exercises={boxBreathing:{name:'Box Breathing',duration:20,phases:[{name:'Inhale',duration:4,instruction:'Breathe in slowly through your nose'},{name:'Hold',duration:4,instruction:'Hold your breath gently'},{name:'Exhale',duration:4,instruction:'Exhale slowly through your mouth'},{name:'Hold',duration:4,instruction:'Hold empty, then repeat'}],disclaimer:'Please practice while stationary for safety.'},deepBelly:{name:'Deep Belly Breath',duration:15,phases:[{name:'Inhale',duration:5,instruction:'Breathe deeply into your belly'},{name:'Exhale',duration:10,instruction:'Exhale slowly and completely'}],disclaimer:'Please practice while stationary for safety.'},mindfulPause:{name:'Mindful Pause',duration:30,phases:[{name:'Notice',duration:30,instruction:'Notice 5 things you see, 4 you feel, 3 sounds, 2 smells, 1 taste'}],disclaimer:'Safe to practice anywhere.'}};// Start exercise\nconst startExercise=exerciseKey=>{const exercise=exercises[exerciseKey];setCurrentExercise(_objectSpread({key:exerciseKey},exercise));setTimeLeft(exercise.duration);setIsActive(true);setBreathPhase('inhale');setPhaseTime(0);trackUsage();triggerHapticFeedback();// Mobile haptic feedback\n};// Stop exercise\nconst stopExercise=()=>{setIsActive(false);setCurrentExercise(null);setTimeLeft(0);setBreathPhase('inhale');setPhaseTime(0);if(intervalRef.current)clearInterval(intervalRef.current);if(phaseIntervalRef.current)clearInterval(phaseIntervalRef.current);};// Timer countdown\nuseEffect(()=>{if(isActive&&timeLeft>0){intervalRef.current=setInterval(()=>{setTimeLeft(prev=>{if(prev<=1){setIsActive(false);setCurrentExercise(null);return 0;}return prev-1;});},1000);}else{if(intervalRef.current)clearInterval(intervalRef.current);}return()=>{if(intervalRef.current)clearInterval(intervalRef.current);};},[isActive,timeLeft]);// Breathing phase management\nuseEffect(()=>{if(isActive&&currentExercise){const currentPhase=currentExercise.phases[0];let phaseIndex=0;let phaseStartTime=0;phaseIntervalRef.current=setInterval(()=>{const elapsed=Date.now()-phaseStartTime;const currentPhaseDuration=currentPhase.duration*1000;if(elapsed>=currentPhaseDuration){phaseIndex=(phaseIndex+1)%currentExercise.phases.length;phaseStartTime=Date.now();setBreathPhase(currentExercise.phases[phaseIndex].name.toLowerCase().replace(' ',''));}},100);return()=>{if(phaseIntervalRef.current)clearInterval(phaseIntervalRef.current);};}},[isActive,currentExercise]);// Mark benefit\nconst markBenefit=()=>{setMetrics(prev=>_objectSpread(_objectSpread({},prev),{},{benefitCount:prev.benefitCount+1}));triggerHapticFeedback();// Mobile haptic feedback\n};// Reset metrics\nconst resetMetrics=()=>{setMetrics({amUsage:0,pmUsage:0,benefitCount:0});};// Format time display\nconst formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(mins,\":\").concat(secs.toString().padStart(2,'0'));};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Present Breathwork\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"Stay grounded in the moment\"})]}),/*#__PURE__*/_jsx(\"main\",{className:\"app-main\",children:!currentExercise?/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-selection\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-display\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Progress\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"AM Sessions\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:metrics.amUsage})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"PM Sessions\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:metrics.pmUsage})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Benefits\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:metrics.benefitCount})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"reset-btn\",onClick:resetMetrics,children:\"Reset Progress\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"exercises\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Choose an Exercise\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-card\",onClick:()=>startExercise('boxBreathing'),onTouchStart:handleTouchStart,onTouchEnd:handleTouchEnd,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Box Breathing\"}),/*#__PURE__*/_jsx(\"p\",{children:\"4-4-4-4 pattern\"}),/*#__PURE__*/_jsx(\"span\",{className:\"duration\",children:\"20 seconds\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-card\",onClick:()=>startExercise('deepBelly'),onTouchStart:handleTouchStart,onTouchEnd:handleTouchEnd,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Deep Belly Breath\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Calming breathwork\"}),/*#__PURE__*/_jsx(\"span\",{className:\"duration\",children:\"15 seconds\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-card\",onClick:()=>startExercise('mindfulPause'),onTouchStart:handleTouchStart,onTouchEnd:handleTouchEnd,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Mindful Pause\"}),/*#__PURE__*/_jsx(\"p\",{children:\"5-4-3-2-1 grounding\"}),/*#__PURE__*/_jsx(\"span\",{className:\"duration\",children:\"30 seconds\"})]})]})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-active\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:currentExercise.name}),/*#__PURE__*/_jsx(\"div\",{className:\"timer\",children:formatTime(timeLeft)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"breathing-circle-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"breathing-circle \".concat(breathPhase),children:/*#__PURE__*/_jsx(\"div\",{className:\"circle-inner\",children:/*#__PURE__*/_jsx(\"span\",{className:\"phase-text\",children:((_currentExercise$phas=currentExercise.phases[0])===null||_currentExercise$phas===void 0?void 0:_currentExercise$phas.instruction)||'Breathe naturally'})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"stop-btn\",onClick:stopExercise,children:\"Stop Exercise\"}),/*#__PURE__*/_jsx(\"button\",{className:\"benefit-btn\",onClick:markBenefit,children:\"I Benefited \\u2728\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"disclaimer\",children:/*#__PURE__*/_jsx(\"p\",{children:currentExercise.disclaimer})})]})})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","App","_currentExercise$phas","currentExercise","setCurrentExercise","isActive","setIsActive","timeLeft","setTimeLeft","breathPhase","setBreathPhase","phaseTime","setPhaseTime","metrics","setMetrics","amUsage","pmUsage","benefitCount","intervalRef","phaseIntervalRef","savedMetrics","localStorage","getItem","JSON","parse","setItem","stringify","trackUsage","now","Date","hour","getHours","prev","_objectSpread","triggerHapticFeedback","navigator","vibrate","handleTouchStart","e","currentTarget","style","transform","handleTouchEnd","exercises","boxBreathing","name","duration","phases","instruction","disclaimer","deepBelly","mindfulPause","startExercise","exerciseKey","exercise","key","stopExercise","current","clearInterval","setInterval","currentPhase","phaseIndex","phaseStartTime","elapsed","currentPhaseDuration","length","toLowerCase","replace","markBenefit","resetMetrics","formatTime","seconds","mins","Math","floor","secs","concat","toString","padStart","className","children","onClick","onTouchStart","onTouchEnd"],"sources":["/Users/iamcoolsuz/Desktop/Present Breathwork APp/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst App = () => {\n  // State management\n  const [currentExercise, setCurrentExercise] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [breathPhase, setBreathPhase] = useState('inhale'); // inhale, hold1, exhale, hold2\n  const [phaseTime, setPhaseTime] = useState(0);\n  const [metrics, setMetrics] = useState({\n    amUsage: 0,\n    pmUsage: 0,\n    benefitCount: 0\n  });\n\n  const intervalRef = useRef(null);\n  const phaseIntervalRef = useRef(null);\n\n  // Load metrics from localStorage on component mount\n  useEffect(() => {\n    const savedMetrics = localStorage.getItem('breathworkMetrics');\n    if (savedMetrics) {\n      setMetrics(JSON.parse(savedMetrics));\n    }\n  }, []);\n\n  // Save metrics to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('breathworkMetrics', JSON.stringify(metrics));\n  }, [metrics]);\n\n  // Track usage based on time of day\n  const trackUsage = () => {\n    const now = new Date();\n    const hour = now.getHours();\n    \n    if (hour < 12) {\n      setMetrics(prev => ({ ...prev, amUsage: prev.amUsage + 1 }));\n    } else {\n      setMetrics(prev => ({ ...prev, pmUsage: prev.pmUsage + 1 }));\n    }\n  };\n\n  // Mobile haptic feedback simulation\n  const triggerHapticFeedback = () => {\n    if ('vibrate' in navigator) {\n      navigator.vibrate(50); // Short vibration\n    }\n  };\n\n  // Mobile touch handlers\n  const handleTouchStart = (e) => {\n    e.currentTarget.style.transform = 'scale(0.95)';\n  };\n\n  const handleTouchEnd = (e) => {\n    e.currentTarget.style.transform = '';\n  };\n\n  // Exercise configurations\n  const exercises = {\n    boxBreathing: {\n      name: 'Box Breathing',\n      duration: 20,\n      phases: [\n        { name: 'Inhale', duration: 4, instruction: 'Breathe in slowly through your nose' },\n        { name: 'Hold', duration: 4, instruction: 'Hold your breath gently' },\n        { name: 'Exhale', duration: 4, instruction: 'Exhale slowly through your mouth' },\n        { name: 'Hold', duration: 4, instruction: 'Hold empty, then repeat' }\n      ],\n      disclaimer: 'Please practice while stationary for safety.'\n    },\n    deepBelly: {\n      name: 'Deep Belly Breath',\n      duration: 15,\n      phases: [\n        { name: 'Inhale', duration: 5, instruction: 'Breathe deeply into your belly' },\n        { name: 'Exhale', duration: 10, instruction: 'Exhale slowly and completely' }\n      ],\n      disclaimer: 'Please practice while stationary for safety.'\n    },\n    mindfulPause: {\n      name: 'Mindful Pause',\n      duration: 30,\n      phases: [\n        { name: 'Notice', duration: 30, instruction: 'Notice 5 things you see, 4 you feel, 3 sounds, 2 smells, 1 taste' }\n      ],\n      disclaimer: 'Safe to practice anywhere.'\n    }\n  };\n\n  // Start exercise\n  const startExercise = (exerciseKey) => {\n    const exercise = exercises[exerciseKey];\n    setCurrentExercise({ key: exerciseKey, ...exercise });\n    setTimeLeft(exercise.duration);\n    setIsActive(true);\n    setBreathPhase('inhale');\n    setPhaseTime(0);\n    trackUsage();\n    triggerHapticFeedback(); // Mobile haptic feedback\n  };\n\n  // Stop exercise\n  const stopExercise = () => {\n    setIsActive(false);\n    setCurrentExercise(null);\n    setTimeLeft(0);\n    setBreathPhase('inhale');\n    setPhaseTime(0);\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    if (phaseIntervalRef.current) clearInterval(phaseIntervalRef.current);\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            setIsActive(false);\n            setCurrentExercise(null);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [isActive, timeLeft]);\n\n  // Breathing phase management\n  useEffect(() => {\n    if (isActive && currentExercise) {\n      const currentPhase = currentExercise.phases[0];\n      let phaseIndex = 0;\n      let phaseStartTime = 0;\n\n      phaseIntervalRef.current = setInterval(() => {\n        const elapsed = Date.now() - phaseStartTime;\n        const currentPhaseDuration = currentPhase.duration * 1000;\n\n        if (elapsed >= currentPhaseDuration) {\n          phaseIndex = (phaseIndex + 1) % currentExercise.phases.length;\n          phaseStartTime = Date.now();\n          setBreathPhase(currentExercise.phases[phaseIndex].name.toLowerCase().replace(' ', ''));\n        }\n      }, 100);\n\n      return () => {\n        if (phaseIntervalRef.current) clearInterval(phaseIntervalRef.current);\n      };\n    }\n  }, [isActive, currentExercise]);\n\n  // Mark benefit\n  const markBenefit = () => {\n    setMetrics(prev => ({ ...prev, benefitCount: prev.benefitCount + 1 }));\n    triggerHapticFeedback(); // Mobile haptic feedback\n  };\n\n  // Reset metrics\n  const resetMetrics = () => {\n    setMetrics({ amUsage: 0, pmUsage: 0, benefitCount: 0 });\n  };\n\n  // Format time display\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Present Breathwork</h1>\n        <p className=\"subtitle\">Stay grounded in the moment</p>\n      </header>\n\n      <main className=\"app-main\">\n        {!currentExercise ? (\n          <div className=\"exercise-selection\">\n            <div className=\"metrics-display\">\n              <h3>Your Progress</h3>\n              <div className=\"metrics-grid\">\n                <div className=\"metric\">\n                  <span className=\"metric-label\">AM Sessions</span>\n                  <span className=\"metric-value\">{metrics.amUsage}</span>\n                </div>\n                <div className=\"metric\">\n                  <span className=\"metric-label\">PM Sessions</span>\n                  <span className=\"metric-value\">{metrics.pmUsage}</span>\n                </div>\n                <div className=\"metric\">\n                  <span className=\"metric-label\">Benefits</span>\n                  <span className=\"metric-value\">{metrics.benefitCount}</span>\n                </div>\n              </div>\n              <button className=\"reset-btn\" onClick={resetMetrics}>\n                Reset Progress\n              </button>\n            </div>\n\n            <div className=\"exercises\">\n              <h3>Choose an Exercise</h3>\n              <div className=\"exercise-cards\">\n                <div \n                  className=\"exercise-card\" \n                  onClick={() => startExercise('boxBreathing')}\n                  onTouchStart={handleTouchStart}\n                  onTouchEnd={handleTouchEnd}\n                >\n                  <h4>Box Breathing</h4>\n                  <p>4-4-4-4 pattern</p>\n                  <span className=\"duration\">20 seconds</span>\n                </div>\n                <div \n                  className=\"exercise-card\" \n                  onClick={() => startExercise('deepBelly')}\n                  onTouchStart={handleTouchStart}\n                  onTouchEnd={handleTouchEnd}\n                >\n                  <h4>Deep Belly Breath</h4>\n                  <p>Calming breathwork</p>\n                  <span className=\"duration\">15 seconds</span>\n                </div>\n                <div \n                  className=\"exercise-card\" \n                  onClick={() => startExercise('mindfulPause')}\n                  onTouchStart={handleTouchStart}\n                  onTouchEnd={handleTouchEnd}\n                >\n                  <h4>Mindful Pause</h4>\n                  <p>5-4-3-2-1 grounding</p>\n                  <span className=\"duration\">30 seconds</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"exercise-active\">\n            <div className=\"exercise-header\">\n              <h2>{currentExercise.name}</h2>\n              <div className=\"timer\">{formatTime(timeLeft)}</div>\n            </div>\n\n            <div className=\"breathing-circle-container\">\n              <div className={`breathing-circle ${breathPhase}`}>\n                <div className=\"circle-inner\">\n                  <span className=\"phase-text\">\n                    {currentExercise.phases[0]?.instruction || 'Breathe naturally'}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"exercise-controls\">\n              <button className=\"stop-btn\" onClick={stopExercise}>\n                Stop Exercise\n              </button>\n              <button className=\"benefit-btn\" onClick={markBenefit}>\n                I Benefited ✨\n              </button>\n            </div>\n\n            <div className=\"disclaimer\">\n              <p>{currentExercise.disclaimer}</p>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}