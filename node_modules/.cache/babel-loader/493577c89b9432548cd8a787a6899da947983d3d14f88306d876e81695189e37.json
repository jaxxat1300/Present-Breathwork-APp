{"ast":null,"code":"var _jsxFileName = \"/Users/iamcoolsuz/Desktop/Present Breathwork APp/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Navigation state\n  const [currentView, setCurrentView] = useState('home'); // home, exercise, profile, settings\n  const [currentExercise, setCurrentExercise] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [breathPhase, setBreathPhase] = useState('inhale');\n  const [phaseTime, setPhaseTime] = useState(0);\n\n  // Enhanced metrics\n  const [metrics, setMetrics] = useState({\n    totalSessions: 0,\n    totalMinutes: 0,\n    streak: 0,\n    lastSession: null,\n    favoriteExercises: [],\n    weeklyGoal: 5,\n    weeklyProgress: 0,\n    benefits: {\n      stressReduction: 0,\n      focusImprovement: 0,\n      sleepQuality: 0,\n      anxietyRelief: 0\n    }\n  });\n\n  // User profile and preferences\n  const [profile, setProfile] = useState({\n    name: '',\n    mindfulnessGoals: [],\n    preferredDuration: 'short',\n    // short, medium, long\n    soundEnabled: true,\n    hapticEnabled: true,\n    reminderTime: null,\n    experienceLevel: 'beginner' // beginner, intermediate, advanced\n  });\n\n  // Audio system\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const audioRef = useRef(null);\n  const backgroundAudioRef = useRef(null);\n  const intervalRef = useRef(null);\n  const phaseIntervalRef = useRef(null);\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const savedMetrics = localStorage.getItem('breathworkMetrics');\n    const savedProfile = localStorage.getItem('breathworkProfile');\n    if (savedMetrics) {\n      setMetrics(JSON.parse(savedMetrics));\n    }\n    if (savedProfile) {\n      setProfile(JSON.parse(savedProfile));\n    }\n  }, []);\n\n  // Save data to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('breathworkMetrics', JSON.stringify(metrics));\n  }, [metrics]);\n  useEffect(() => {\n    localStorage.setItem('breathworkProfile', JSON.stringify(profile));\n  }, [profile]);\n\n  // Audio system\n  useEffect(() => {\n    if (audioEnabled && profile.soundEnabled) {\n      // Create audio context for breathing sounds\n      if (!audioRef.current) {\n        audioRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n    }\n  }, [audioEnabled, profile.soundEnabled]);\n\n  // Play breathing sound\n  const playBreathingSound = phase => {\n    if (!audioEnabled || !profile.soundEnabled) return;\n    try {\n      const oscillator = audioRef.current.createOscillator();\n      const gainNode = audioRef.current.createGain();\n      oscillator.connect(gainNode);\n      gainNode.connect(audioRef.current.destination);\n\n      // Different frequencies for different phases\n      const frequencies = {\n        inhale: 220,\n        hold: 330,\n        exhale: 110,\n        notice: 440\n      };\n      oscillator.frequency.setValueAtTime(frequencies[phase] || 220, audioRef.current.currentTime);\n      oscillator.type = 'sine';\n      gainNode.gain.setValueAtTime(0, audioRef.current.currentTime);\n      gainNode.gain.linearRampToValueAtTime(0.1, audioRef.current.currentTime + 0.1);\n      gainNode.gain.linearRampToValueAtTime(0, audioRef.current.currentTime + 0.5);\n      oscillator.start(audioRef.current.currentTime);\n      oscillator.stop(audioRef.current.currentTime + 0.5);\n    } catch (error) {\n      console.log('Audio not available:', error);\n    }\n  };\n\n  // Mobile haptic feedback\n  const triggerHapticFeedback = () => {\n    if (profile.hapticEnabled && 'vibrate' in navigator) {\n      navigator.vibrate([50, 30, 50]);\n    }\n  };\n\n  // Enhanced exercise configurations\n  const exercises = {\n    boxBreathing: {\n      name: 'Box Breathing',\n      duration: 20,\n      difficulty: 'beginner',\n      category: 'calming',\n      phases: [{\n        name: 'Inhale',\n        duration: 4,\n        instruction: 'Breathe in slowly through your nose'\n      }, {\n        name: 'Hold',\n        duration: 4,\n        instruction: 'Hold your breath gently'\n      }, {\n        name: 'Exhale',\n        duration: 4,\n        instruction: 'Exhale slowly through your mouth'\n      }, {\n        name: 'Hold',\n        duration: 4,\n        instruction: 'Hold empty, then repeat'\n      }],\n      description: 'A simple 4-4-4-4 breathing pattern to calm your nervous system',\n      benefits: ['Reduces stress', 'Improves focus', 'Calms anxiety']\n    },\n    deepBelly: {\n      name: 'Deep Belly Breath',\n      duration: 15,\n      difficulty: 'beginner',\n      category: 'calming',\n      phases: [{\n        name: 'Inhale',\n        duration: 5,\n        instruction: 'Breathe deeply into your belly'\n      }, {\n        name: 'Exhale',\n        duration: 10,\n        instruction: 'Exhale slowly and completely'\n      }],\n      description: 'Deep diaphragmatic breathing to activate your parasympathetic nervous system',\n      benefits: ['Reduces stress', 'Improves sleep', 'Calms anxiety']\n    },\n    mindfulPause: {\n      name: 'Mindful Pause',\n      duration: 30,\n      difficulty: 'beginner',\n      category: 'grounding',\n      phases: [{\n        name: 'Notice',\n        duration: 30,\n        instruction: 'Notice 5 things you see, 4 you feel, 3 sounds, 2 smells, 1 taste'\n      }],\n      description: 'A grounding technique using your five senses to bring you back to the present moment',\n      benefits: ['Reduces anxiety', 'Improves focus', 'Grounds you in the present']\n    },\n    energizing: {\n      name: 'Energizing Breath',\n      duration: 25,\n      difficulty: 'intermediate',\n      category: 'energizing',\n      phases: [{\n        name: 'Inhale',\n        duration: 3,\n        instruction: 'Quick, energizing inhale'\n      }, {\n        name: 'Exhale',\n        duration: 3,\n        instruction: 'Quick, powerful exhale'\n      }, {\n        name: 'Hold',\n        duration: 2,\n        instruction: 'Brief pause'\n      }],\n      description: 'Quick breathing pattern to increase energy and alertness',\n      benefits: ['Increases energy', 'Improves focus', 'Boosts alertness']\n    },\n    sleepPrep: {\n      name: 'Sleep Preparation',\n      duration: 40,\n      difficulty: 'beginner',\n      category: 'sleep',\n      phases: [{\n        name: 'Inhale',\n        duration: 6,\n        instruction: 'Slow, deep inhale'\n      }, {\n        name: 'Exhale',\n        duration: 8,\n        instruction: 'Longer, relaxing exhale'\n      }],\n      description: 'Slow breathing pattern to prepare your body and mind for sleep',\n      benefits: ['Improves sleep', 'Reduces stress', 'Calms the mind']\n    }\n  };\n\n  // Start exercise\n  const startExercise = exerciseKey => {\n    const exercise = exercises[exerciseKey];\n    setCurrentExercise({\n      key: exerciseKey,\n      ...exercise\n    });\n    setTimeLeft(exercise.duration);\n    setIsActive(true);\n    setBreathPhase('inhale');\n    setPhaseTime(0);\n    setCurrentView('exercise');\n\n    // Update metrics\n    setMetrics(prev => ({\n      ...prev,\n      totalSessions: prev.totalSessions + 1,\n      totalMinutes: prev.totalMinutes + exercise.duration,\n      lastSession: new Date().toISOString()\n    }));\n    triggerHapticFeedback();\n    playBreathingSound('inhale');\n  };\n\n  // Stop exercise\n  const stopExercise = () => {\n    setIsActive(false);\n    setCurrentExercise(null);\n    setTimeLeft(0);\n    setBreathPhase('inhale');\n    setPhaseTime(0);\n    setCurrentView('home');\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    if (phaseIntervalRef.current) clearInterval(phaseIntervalRef.current);\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            setIsActive(false);\n            setCurrentExercise(null);\n            setCurrentView('home');\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [isActive, timeLeft]);\n\n  // Breathing phase management\n  useEffect(() => {\n    if (isActive && currentExercise) {\n      const currentPhase = currentExercise.phases[0];\n      let phaseIndex = 0;\n      let phaseStartTime = Date.now();\n      phaseIntervalRef.current = setInterval(() => {\n        const elapsed = Date.now() - phaseStartTime;\n        const currentPhaseDuration = currentPhase.duration * 1000;\n        if (elapsed >= currentPhaseDuration) {\n          phaseIndex = (phaseIndex + 1) % currentExercise.phases.length;\n          phaseStartTime = Date.now();\n          const newPhase = currentExercise.phases[phaseIndex].name.toLowerCase().replace(' ', '');\n          setBreathPhase(newPhase);\n          playBreathingSound(newPhase);\n        }\n      }, 100);\n      return () => {\n        if (phaseIntervalRef.current) clearInterval(phaseIntervalRef.current);\n      };\n    }\n  }, [isActive, currentExercise]);\n\n  // Mark benefit\n  const markBenefit = benefitType => {\n    setMetrics(prev => ({\n      ...prev,\n      benefits: {\n        ...prev.benefits,\n        [benefitType]: prev.benefits[benefitType] + 1\n      }\n    }));\n    triggerHapticFeedback();\n  };\n\n  // Save exercise as favorite\n  const toggleFavorite = exerciseKey => {\n    setMetrics(prev => ({\n      ...prev,\n      favoriteExercises: prev.favoriteExercises.includes(exerciseKey) ? prev.favoriteExercises.filter(key => key !== exerciseKey) : [...prev.favoriteExercises, exerciseKey]\n    }));\n  };\n\n  // Update profile\n  const updateProfile = updates => {\n    setProfile(prev => ({\n      ...prev,\n      ...updates\n    }));\n  };\n\n  // Format time display\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Navigation component\n  const Navigation = () => /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navigation\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-btn\",\n      onClick: () => setCurrentView('home'),\n      disabled: currentView === 'home',\n      children: \"\\uD83C\\uDFE0 Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-btn\",\n      onClick: () => setCurrentView('profile'),\n      disabled: currentView === 'profile',\n      children: \"\\uD83D\\uDC64 Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-btn\",\n      onClick: () => setCurrentView('settings'),\n      disabled: currentView === 'settings',\n      children: \"\\u2699\\uFE0F Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n\n  // Home view\n  const HomeView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome back\", profile.name ? `, ${profile.name}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Take a moment to breathe and center yourself\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: metrics.totalSessions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Total Sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: metrics.totalMinutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Minutes Meditated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: metrics.streak\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Day Streak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercises-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Choose Your Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-cards\",\n        children: Object.entries(exercises).map(([key, exercise]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `exercise-card ${metrics.favoriteExercises.includes(key) ? 'favorite' : ''}`,\n          onClick: () => startExercise(key),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"favorite-btn\",\n              onClick: e => {\n                e.stopPropagation();\n                toggleFavorite(key);\n              },\n              children: metrics.favoriteExercises.includes(key) ? '❤️' : '🤍'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: exercise.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: [exercise.duration, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty\",\n              children: exercise.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category\",\n              children: exercise.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n\n  // Profile view\n  const ProfileView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: profile.name,\n        onChange: e => updateProfile({\n          name: e.target.value\n        }),\n        placeholder: \"Enter your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Experience Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: profile.experienceLevel,\n        onChange: e => updateProfile({\n          experienceLevel: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"beginner\",\n          children: \"Beginner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"intermediate\",\n          children: \"Intermediate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"advanced\",\n          children: \"Advanced\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Preferred Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: profile.preferredDuration,\n        onChange: e => updateProfile({\n          preferredDuration: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"short\",\n          children: \"Short (5-15 min)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium (15-30 min)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"long\",\n          children: \"Long (30+ min)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: profile.soundEnabled,\n          onChange: e => updateProfile({\n            soundEnabled: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), \"Enable Sound\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: profile.hapticEnabled,\n          onChange: e => updateProfile({\n            hapticEnabled: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), \"Enable Haptic Feedback\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"benefits-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Benefits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"benefits-grid\",\n        children: Object.entries(metrics.benefits).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"benefit-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"benefit-label\",\n            children: key.replace(/([A-Z])/g, ' $1').trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"benefit-value\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n\n  // Settings view\n  const SettingsView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: audioEnabled,\n          onChange: e => setAudioEnabled(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), \"Enable Audio Cues\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: metrics.weeklyGoal,\n        onChange: e => setMetrics(prev => ({\n          ...prev,\n          weeklyGoal: parseInt(e.target.value)\n        })),\n        min: \"1\",\n        max: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current progress: \", metrics.weeklyProgress, \"/\", metrics.weeklyGoal, \" sessions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: () => {\n          if (window.confirm('Are you sure you want to reset all data?')) {\n            setMetrics({\n              totalSessions: 0,\n              totalMinutes: 0,\n              streak: 0,\n              lastSession: null,\n              favoriteExercises: [],\n              weeklyGoal: 5,\n              weeklyProgress: 0,\n              benefits: {\n                stressReduction: 0,\n                focusImprovement: 0,\n                sleepQuality: 0,\n                anxietyRelief: 0\n              }\n            });\n          }\n        },\n        children: \"Reset All Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 466,\n    columnNumber: 5\n  }, this);\n\n  // Exercise view\n  const ExerciseView = () => {\n    var _currentExercise$phas;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-active\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => setCurrentView('home'),\n          children: \"\\u2190 Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentExercise.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: formatTime(timeLeft)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"breathing-circle-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `breathing-circle ${breathPhase}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle-inner\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"phase-text\",\n              children: ((_currentExercise$phas = currentExercise.phases[0]) === null || _currentExercise$phas === void 0 ? void 0 : _currentExercise$phas.instruction) || 'Breathe naturally'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stop-btn\",\n          onClick: stopExercise,\n          children: \"Stop Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"benefit-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"benefit-btn\",\n            onClick: () => markBenefit('stressReduction'),\n            children: \"Less Stressed \\u2728\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"benefit-btn\",\n            onClick: () => markBenefit('focusImprovement'),\n            children: \"More Focused \\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"benefit-btn\",\n            onClick: () => markBenefit('anxietyRelief'),\n            children: \"Less Anxious \\uD83D\\uDE0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disclaimer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentExercise.disclaimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Present Breathwork\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Your personal wellness companion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [currentView === 'home' && /*#__PURE__*/_jsxDEV(HomeView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 36\n      }, this), currentView === 'profile' && /*#__PURE__*/_jsxDEV(ProfileView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 39\n      }, this), currentView === 'settings' && /*#__PURE__*/_jsxDEV(SettingsView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 40\n      }, this), currentView === 'exercise' && /*#__PURE__*/_jsxDEV(ExerciseView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this), currentView !== 'exercise' && /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 567,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"F1KrxcTmw53kNTuktTTf1VXlLeM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","currentExercise","setCurrentExercise","isActive","setIsActive","timeLeft","setTimeLeft","breathPhase","setBreathPhase","phaseTime","setPhaseTime","metrics","setMetrics","totalSessions","totalMinutes","streak","lastSession","favoriteExercises","weeklyGoal","weeklyProgress","benefits","stressReduction","focusImprovement","sleepQuality","anxietyRelief","profile","setProfile","name","mindfulnessGoals","preferredDuration","soundEnabled","hapticEnabled","reminderTime","experienceLevel","audioEnabled","setAudioEnabled","audioRef","backgroundAudioRef","intervalRef","phaseIntervalRef","savedMetrics","localStorage","getItem","savedProfile","JSON","parse","setItem","stringify","current","window","AudioContext","webkitAudioContext","playBreathingSound","phase","oscillator","createOscillator","gainNode","createGain","connect","destination","frequencies","inhale","hold","exhale","notice","frequency","setValueAtTime","currentTime","type","gain","linearRampToValueAtTime","start","stop","error","console","log","triggerHapticFeedback","navigator","vibrate","exercises","boxBreathing","duration","difficulty","category","phases","instruction","description","deepBelly","mindfulPause","energizing","sleepPrep","startExercise","exerciseKey","exercise","key","prev","Date","toISOString","stopExercise","clearInterval","setInterval","currentPhase","phaseIndex","phaseStartTime","now","elapsed","currentPhaseDuration","length","newPhase","toLowerCase","replace","markBenefit","benefitType","toggleFavorite","includes","filter","updateProfile","updates","formatTime","seconds","mins","Math","floor","secs","toString","padStart","Navigation","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","HomeView","Object","entries","map","e","stopPropagation","ProfileView","value","onChange","target","placeholder","checked","trim","SettingsView","parseInt","min","max","confirm","ExerciseView","_currentExercise$phas","disclaimer","_c","$RefreshReg$"],"sources":["/Users/iamcoolsuz/Desktop/Present Breathwork APp/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst App = () => {\n  // Navigation state\n  const [currentView, setCurrentView] = useState('home'); // home, exercise, profile, settings\n  const [currentExercise, setCurrentExercise] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [breathPhase, setBreathPhase] = useState('inhale');\n  const [phaseTime, setPhaseTime] = useState(0);\n  \n  // Enhanced metrics\n  const [metrics, setMetrics] = useState({\n    totalSessions: 0,\n    totalMinutes: 0,\n    streak: 0,\n    lastSession: null,\n    favoriteExercises: [],\n    weeklyGoal: 5,\n    weeklyProgress: 0,\n    benefits: {\n      stressReduction: 0,\n      focusImprovement: 0,\n      sleepQuality: 0,\n      anxietyRelief: 0\n    }\n  });\n\n  // User profile and preferences\n  const [profile, setProfile] = useState({\n    name: '',\n    mindfulnessGoals: [],\n    preferredDuration: 'short', // short, medium, long\n    soundEnabled: true,\n    hapticEnabled: true,\n    reminderTime: null,\n    experienceLevel: 'beginner' // beginner, intermediate, advanced\n  });\n\n  // Audio system\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const audioRef = useRef(null);\n  const backgroundAudioRef = useRef(null);\n\n  const intervalRef = useRef(null);\n  const phaseIntervalRef = useRef(null);\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const savedMetrics = localStorage.getItem('breathworkMetrics');\n    const savedProfile = localStorage.getItem('breathworkProfile');\n    \n    if (savedMetrics) {\n      setMetrics(JSON.parse(savedMetrics));\n    }\n    if (savedProfile) {\n      setProfile(JSON.parse(savedProfile));\n    }\n  }, []);\n\n  // Save data to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('breathworkMetrics', JSON.stringify(metrics));\n  }, [metrics]);\n\n  useEffect(() => {\n    localStorage.setItem('breathworkProfile', JSON.stringify(profile));\n  }, [profile]);\n\n  // Audio system\n  useEffect(() => {\n    if (audioEnabled && profile.soundEnabled) {\n      // Create audio context for breathing sounds\n      if (!audioRef.current) {\n        audioRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n    }\n  }, [audioEnabled, profile.soundEnabled]);\n\n  // Play breathing sound\n  const playBreathingSound = (phase) => {\n    if (!audioEnabled || !profile.soundEnabled) return;\n    \n    try {\n      const oscillator = audioRef.current.createOscillator();\n      const gainNode = audioRef.current.createGain();\n      \n      oscillator.connect(gainNode);\n      gainNode.connect(audioRef.current.destination);\n      \n      // Different frequencies for different phases\n      const frequencies = {\n        inhale: 220,\n        hold: 330,\n        exhale: 110,\n        notice: 440\n      };\n      \n      oscillator.frequency.setValueAtTime(frequencies[phase] || 220, audioRef.current.currentTime);\n      oscillator.type = 'sine';\n      \n      gainNode.gain.setValueAtTime(0, audioRef.current.currentTime);\n      gainNode.gain.linearRampToValueAtTime(0.1, audioRef.current.currentTime + 0.1);\n      gainNode.gain.linearRampToValueAtTime(0, audioRef.current.currentTime + 0.5);\n      \n      oscillator.start(audioRef.current.currentTime);\n      oscillator.stop(audioRef.current.currentTime + 0.5);\n    } catch (error) {\n      console.log('Audio not available:', error);\n    }\n  };\n\n  // Mobile haptic feedback\n  const triggerHapticFeedback = () => {\n    if (profile.hapticEnabled && 'vibrate' in navigator) {\n      navigator.vibrate([50, 30, 50]);\n    }\n  };\n\n  // Enhanced exercise configurations\n  const exercises = {\n    boxBreathing: {\n      name: 'Box Breathing',\n      duration: 20,\n      difficulty: 'beginner',\n      category: 'calming',\n      phases: [\n        { name: 'Inhale', duration: 4, instruction: 'Breathe in slowly through your nose' },\n        { name: 'Hold', duration: 4, instruction: 'Hold your breath gently' },\n        { name: 'Exhale', duration: 4, instruction: 'Exhale slowly through your mouth' },\n        { name: 'Hold', duration: 4, instruction: 'Hold empty, then repeat' }\n      ],\n      description: 'A simple 4-4-4-4 breathing pattern to calm your nervous system',\n      benefits: ['Reduces stress', 'Improves focus', 'Calms anxiety']\n    },\n    deepBelly: {\n      name: 'Deep Belly Breath',\n      duration: 15,\n      difficulty: 'beginner',\n      category: 'calming',\n      phases: [\n        { name: 'Inhale', duration: 5, instruction: 'Breathe deeply into your belly' },\n        { name: 'Exhale', duration: 10, instruction: 'Exhale slowly and completely' }\n      ],\n      description: 'Deep diaphragmatic breathing to activate your parasympathetic nervous system',\n      benefits: ['Reduces stress', 'Improves sleep', 'Calms anxiety']\n    },\n    mindfulPause: {\n      name: 'Mindful Pause',\n      duration: 30,\n      difficulty: 'beginner',\n      category: 'grounding',\n      phases: [\n        { name: 'Notice', duration: 30, instruction: 'Notice 5 things you see, 4 you feel, 3 sounds, 2 smells, 1 taste' }\n      ],\n      description: 'A grounding technique using your five senses to bring you back to the present moment',\n      benefits: ['Reduces anxiety', 'Improves focus', 'Grounds you in the present']\n    },\n    energizing: {\n      name: 'Energizing Breath',\n      duration: 25,\n      difficulty: 'intermediate',\n      category: 'energizing',\n      phases: [\n        { name: 'Inhale', duration: 3, instruction: 'Quick, energizing inhale' },\n        { name: 'Exhale', duration: 3, instruction: 'Quick, powerful exhale' },\n        { name: 'Hold', duration: 2, instruction: 'Brief pause' }\n      ],\n      description: 'Quick breathing pattern to increase energy and alertness',\n      benefits: ['Increases energy', 'Improves focus', 'Boosts alertness']\n    },\n    sleepPrep: {\n      name: 'Sleep Preparation',\n      duration: 40,\n      difficulty: 'beginner',\n      category: 'sleep',\n      phases: [\n        { name: 'Inhale', duration: 6, instruction: 'Slow, deep inhale' },\n        { name: 'Exhale', duration: 8, instruction: 'Longer, relaxing exhale' }\n      ],\n      description: 'Slow breathing pattern to prepare your body and mind for sleep',\n      benefits: ['Improves sleep', 'Reduces stress', 'Calms the mind']\n    }\n  };\n\n  // Start exercise\n  const startExercise = (exerciseKey) => {\n    const exercise = exercises[exerciseKey];\n    setCurrentExercise({ key: exerciseKey, ...exercise });\n    setTimeLeft(exercise.duration);\n    setIsActive(true);\n    setBreathPhase('inhale');\n    setPhaseTime(0);\n    setCurrentView('exercise');\n    \n    // Update metrics\n    setMetrics(prev => ({\n      ...prev,\n      totalSessions: prev.totalSessions + 1,\n      totalMinutes: prev.totalMinutes + exercise.duration,\n      lastSession: new Date().toISOString()\n    }));\n    \n    triggerHapticFeedback();\n    playBreathingSound('inhale');\n  };\n\n  // Stop exercise\n  const stopExercise = () => {\n    setIsActive(false);\n    setCurrentExercise(null);\n    setTimeLeft(0);\n    setBreathPhase('inhale');\n    setPhaseTime(0);\n    setCurrentView('home');\n    \n    if (intervalRef.current) clearInterval(intervalRef.current);\n    if (phaseIntervalRef.current) clearInterval(phaseIntervalRef.current);\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            setIsActive(false);\n            setCurrentExercise(null);\n            setCurrentView('home');\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    }\n\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [isActive, timeLeft]);\n\n  // Breathing phase management\n  useEffect(() => {\n    if (isActive && currentExercise) {\n      const currentPhase = currentExercise.phases[0];\n      let phaseIndex = 0;\n      let phaseStartTime = Date.now();\n\n      phaseIntervalRef.current = setInterval(() => {\n        const elapsed = Date.now() - phaseStartTime;\n        const currentPhaseDuration = currentPhase.duration * 1000;\n\n        if (elapsed >= currentPhaseDuration) {\n          phaseIndex = (phaseIndex + 1) % currentExercise.phases.length;\n          phaseStartTime = Date.now();\n          const newPhase = currentExercise.phases[phaseIndex].name.toLowerCase().replace(' ', '');\n          setBreathPhase(newPhase);\n          playBreathingSound(newPhase);\n        }\n      }, 100);\n\n      return () => {\n        if (phaseIntervalRef.current) clearInterval(phaseIntervalRef.current);\n      };\n    }\n  }, [isActive, currentExercise]);\n\n  // Mark benefit\n  const markBenefit = (benefitType) => {\n    setMetrics(prev => ({\n      ...prev,\n      benefits: {\n        ...prev.benefits,\n        [benefitType]: prev.benefits[benefitType] + 1\n      }\n    }));\n    triggerHapticFeedback();\n  };\n\n  // Save exercise as favorite\n  const toggleFavorite = (exerciseKey) => {\n    setMetrics(prev => ({\n      ...prev,\n      favoriteExercises: prev.favoriteExercises.includes(exerciseKey)\n        ? prev.favoriteExercises.filter(key => key !== exerciseKey)\n        : [...prev.favoriteExercises, exerciseKey]\n    }));\n  };\n\n  // Update profile\n  const updateProfile = (updates) => {\n    setProfile(prev => ({ ...prev, ...updates }));\n  };\n\n  // Format time display\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Navigation component\n  const Navigation = () => (\n    <nav className=\"navigation\">\n      <button \n        className=\"nav-btn\" \n        onClick={() => setCurrentView('home')}\n        disabled={currentView === 'home'}\n      >\n        🏠 Home\n      </button>\n      <button \n        className=\"nav-btn\" \n        onClick={() => setCurrentView('profile')}\n        disabled={currentView === 'profile'}\n      >\n        👤 Profile\n      </button>\n      <button \n        className=\"nav-btn\" \n        onClick={() => setCurrentView('settings')}\n        disabled={currentView === 'settings'}\n      >\n        ⚙️ Settings\n      </button>\n    </nav>\n  );\n\n  // Home view\n  const HomeView = () => (\n    <div className=\"home-view\">\n      <div className=\"welcome-section\">\n        <h2>Welcome back{profile.name ? `, ${profile.name}` : ''}</h2>\n        <p>Take a moment to breathe and center yourself</p>\n      </div>\n\n      <div className=\"metrics-overview\">\n        <div className=\"metric-card\">\n          <h3>{metrics.totalSessions}</h3>\n          <p>Total Sessions</p>\n        </div>\n        <div className=\"metric-card\">\n          <h3>{metrics.totalMinutes}</h3>\n          <p>Minutes Meditated</p>\n        </div>\n        <div className=\"metric-card\">\n          <h3>{metrics.streak}</h3>\n          <p>Day Streak</p>\n        </div>\n      </div>\n\n      <div className=\"exercises-section\">\n        <h3>Choose Your Practice</h3>\n        <div className=\"exercise-cards\">\n          {Object.entries(exercises).map(([key, exercise]) => (\n            <div \n              key={key}\n              className={`exercise-card ${metrics.favoriteExercises.includes(key) ? 'favorite' : ''}`}\n              onClick={() => startExercise(key)}\n            >\n              <div className=\"exercise-header\">\n                <h4>{exercise.name}</h4>\n                <button \n                  className=\"favorite-btn\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    toggleFavorite(key);\n                  }}\n                >\n                  {metrics.favoriteExercises.includes(key) ? '❤️' : '🤍'}\n                </button>\n              </div>\n              <p>{exercise.description}</p>\n              <div className=\"exercise-meta\">\n                <span className=\"duration\">{exercise.duration}s</span>\n                <span className=\"difficulty\">{exercise.difficulty}</span>\n                <span className=\"category\">{exercise.category}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  // Profile view\n  const ProfileView = () => (\n    <div className=\"profile-view\">\n      <h2>Your Profile</h2>\n      \n      <div className=\"profile-section\">\n        <label>Name</label>\n        <input \n          type=\"text\" \n          value={profile.name}\n          onChange={(e) => updateProfile({ name: e.target.value })}\n          placeholder=\"Enter your name\"\n        />\n      </div>\n\n      <div className=\"profile-section\">\n        <label>Experience Level</label>\n        <select \n          value={profile.experienceLevel}\n          onChange={(e) => updateProfile({ experienceLevel: e.target.value })}\n        >\n          <option value=\"beginner\">Beginner</option>\n          <option value=\"intermediate\">Intermediate</option>\n          <option value=\"advanced\">Advanced</option>\n        </select>\n      </div>\n\n      <div className=\"profile-section\">\n        <label>Preferred Duration</label>\n        <select \n          value={profile.preferredDuration}\n          onChange={(e) => updateProfile({ preferredDuration: e.target.value })}\n        >\n          <option value=\"short\">Short (5-15 min)</option>\n          <option value=\"medium\">Medium (15-30 min)</option>\n          <option value=\"long\">Long (30+ min)</option>\n        </select>\n      </div>\n\n      <div className=\"profile-section\">\n        <label>\n          <input \n            type=\"checkbox\" \n            checked={profile.soundEnabled}\n            onChange={(e) => updateProfile({ soundEnabled: e.target.checked })}\n          />\n          Enable Sound\n        </label>\n      </div>\n\n      <div className=\"profile-section\">\n        <label>\n          <input \n            type=\"checkbox\" \n            checked={profile.hapticEnabled}\n            onChange={(e) => updateProfile({ hapticEnabled: e.target.checked })}\n          />\n          Enable Haptic Feedback\n        </label>\n      </div>\n\n      <div className=\"benefits-section\">\n        <h3>Your Benefits</h3>\n        <div className=\"benefits-grid\">\n          {Object.entries(metrics.benefits).map(([key, value]) => (\n            <div key={key} className=\"benefit-item\">\n              <span className=\"benefit-label\">{key.replace(/([A-Z])/g, ' $1').trim()}</span>\n              <span className=\"benefit-value\">{value}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  // Settings view\n  const SettingsView = () => (\n    <div className=\"settings-view\">\n      <h2>Settings</h2>\n      \n      <div className=\"settings-section\">\n        <h3>Audio</h3>\n        <label>\n          <input \n            type=\"checkbox\" \n            checked={audioEnabled}\n            onChange={(e) => setAudioEnabled(e.target.checked)}\n          />\n          Enable Audio Cues\n        </label>\n      </div>\n\n      <div className=\"settings-section\">\n        <h3>Weekly Goal</h3>\n        <input \n          type=\"number\" \n          value={metrics.weeklyGoal}\n          onChange={(e) => setMetrics(prev => ({ ...prev, weeklyGoal: parseInt(e.target.value) }))}\n          min=\"1\"\n          max=\"20\"\n        />\n        <p>Current progress: {metrics.weeklyProgress}/{metrics.weeklyGoal} sessions</p>\n      </div>\n\n      <div className=\"settings-section\">\n        <button \n          className=\"reset-btn\"\n          onClick={() => {\n            if (window.confirm('Are you sure you want to reset all data?')) {\n              setMetrics({\n                totalSessions: 0,\n                totalMinutes: 0,\n                streak: 0,\n                lastSession: null,\n                favoriteExercises: [],\n                weeklyGoal: 5,\n                weeklyProgress: 0,\n                benefits: {\n                  stressReduction: 0,\n                  focusImprovement: 0,\n                  sleepQuality: 0,\n                  anxietyRelief: 0\n                }\n              });\n            }\n          }}\n        >\n          Reset All Data\n        </button>\n      </div>\n    </div>\n  );\n\n  // Exercise view\n  const ExerciseView = () => (\n    <div className=\"exercise-active\">\n      <div className=\"exercise-header\">\n        <button className=\"back-btn\" onClick={() => setCurrentView('home')}>\n          ← Back\n        </button>\n        <h2>{currentExercise.name}</h2>\n        <div className=\"timer\">{formatTime(timeLeft)}</div>\n      </div>\n\n      <div className=\"breathing-circle-container\">\n        <div className={`breathing-circle ${breathPhase}`}>\n          <div className=\"circle-inner\">\n            <span className=\"phase-text\">\n              {currentExercise.phases[0]?.instruction || 'Breathe naturally'}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"exercise-controls\">\n        <button className=\"stop-btn\" onClick={stopExercise}>\n          Stop Exercise\n        </button>\n        <div className=\"benefit-buttons\">\n          <button className=\"benefit-btn\" onClick={() => markBenefit('stressReduction')}>\n            Less Stressed ✨\n          </button>\n          <button className=\"benefit-btn\" onClick={() => markBenefit('focusImprovement')}>\n            More Focused 🎯\n          </button>\n          <button className=\"benefit-btn\" onClick={() => markBenefit('anxietyRelief')}>\n            Less Anxious 😌\n          </button>\n        </div>\n      </div>\n\n      <div className=\"disclaimer\">\n        <p>{currentExercise.disclaimer}</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Present Breathwork</h1>\n        <p className=\"subtitle\">Your personal wellness companion</p>\n      </header>\n\n      <main className=\"app-main\">\n        {currentView === 'home' && <HomeView />}\n        {currentView === 'profile' && <ProfileView />}\n        {currentView === 'settings' && <SettingsView />}\n        {currentView === 'exercise' && <ExerciseView />}\n      </main>\n\n      {currentView !== 'exercise' && <Navigation />}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}